{"version":3,"sources":["html/Home.js","html/Home2.js","html/TopModal.js","redux/ActionTypes.js","redux/ActionCreators.js","shared/baseUrl.js","html/BottomModal.js","html/NavbarTop.js","html/Footer.js","html/Locations.js","html/LocationOneModal.js","html/LocationTwoModal.js","html/LocationThreeModal.js","html/LocationFourModal.js","html/LocationFiveModal.js","html/LocationSixModal.js","html/States.js","html/LocationSevenModal.js","html/LocationEightModal.js","html/LocationNineModal.js","html/LocationTenModal.js","html/LocationElevenModal.js","html/LocationTwelveModal.js","html/States2.js","html/LocationThirteenModal.js","html/LocationFourteenModal.js","html/LocationFifteenModal.js","html/LocationSixteenModal.js","html/LocationSeventeenModal.js","html/LocationEighteenModal.js","html/States3.js","html/MainComponent.js","shared/campsites.js","redux/campsites.js","shared/main.js","redux/main.js","shared/cleaners.js","redux/cleaners.js","App.js","redux/configureStore.js","reportWebVitals.js","index.js"],"names":["Home","Fragment","className","src","class","alt","width","React","Component","Home2","TopModal","ADD_CLEANER","postCleaner","cleanerId","fullname","phone","email","location","dispatch","newCleaner","date","Date","toISOString","console","log","bearer","localStorage","getItem","fetch","method","body","JSON","stringify","headers","then","response","ok","error","Error","status","statusText","json","r","catch","message","alert","required","val","length","maxLength","len","minLength","isNumber","isNaN","validEmail","test","BottomModal","props","state","isNavOpen","isModalOpen","touched","toggleNav","bind","handleSubmit","this","setState","values","onSubmit","Row","Label","htmlFor","md","Col","text","model","id","name","placeholder","validators","show","component","messages","MaxLength","select","value","size","offset","Button","type","color","mapDispatchToProps","connect","NavbarTop","toggleModal","Navbar","sticky","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","NavItem","to","Modal","toggle","ModalHeader","ModalBody","Footer","Locations","LocationOneModal","selected","disabled","hidden","LocationTwoModal","LocationThreeModal","LocationFourModal","LocationFiveModal","LocationSixModal","States","isModalOpen2","isModalOpen3","isModalOpen4","isModalOpen5","isModalOpen6","toggleModal2","toggleModal3","toggleModal4","toggleModal5","toggleModal6","LocationSevenModal","LocationEightModal","LocationNineModal","LocationTenModal","LocationElevenModal","LocationTwelveModal","States2","LocationThirteenModal","LocationFourteenModal","LocationFifteenModal","LocationSixteenModal","LocationSeventeenModal","LocationEighteenModal","States3","MainComponent","exact","path","withRouter","campsites","comments","cleaner","main","CAMPSITES","elevation","featured","description","Campsites","action","MAIN","image","Main","CLEANERS","Cleaners","ActionTypes","payload","concat","store","createStore","combineReducers","campsitse","cleaners","applyMiddleware","thunk","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0cd09187.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Home extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<img src='images/Main_logo.png' class=\"img-fluid Centered Padding\" alt=\"Logo\" width=\"110px\"/>\n\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t<div className=\"row my-3\">\n\t\t\t\t\t\t\t<div className=\"RedDivBorder\"></div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div class=\"text-center mb-3 text-center mx-auto\">\n\t\t\t\t\t\t\t\t<h1 class=\"text-center BigFont\">What we doTesting123</h1>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"col-sm-12 col-md-4\">\n\n\t\t\t\t\t\t\t<img src='images/trash.png' class=\"img-fluid img-responsive Centered\" alt=\"Trash5\" width=\"100px\" />\n\n\n\t\t\t\t\t\t\t<h1 class=\"text-center HeaderFont\">Manage all forms of waste</h1>\n\t\t\t\t\t\t\t<p class=\"ParaText\">Lorem ipsum Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum Lorem ipsum </p>\n\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t<div class=\"col-sm-12 col-md-4 Two\">\n\t\t\t\t\t\t\t<img src='../images/Sprayer.png' class=\"img-fluid img-responsive Centered\" alt=\"Trash5\" width=\"110px\" />\n\t\t\t\t\t\t\t<h1 class=\"text-center HeaderFont\">Clean windows</h1>\n\t\t\t\t\t\t\t<p class=\"ParaText\">Lorem ipsum Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum Lorem ipsum </p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-sm-12 col-md-4 Three\">\n\n\t\t\t\t\t\t\t<img src='../images/MOP.jpg' class=\"img-fluid img-responsive Centered\" alt=\"Trash5\" width=\"110px\" />\n\t\t\t\t\t\t\t<h3 class=\"text-center HeaderFont\">Disinfect Floors</h3>\n\t\t\t\t\t\t\t<p class=\"ParaText\">Lorem ipsum Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum Lorem ipsum </p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"row my-3\">\n\t\t\t\t\t\t<div className=\"RedDivBorder\"></div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div class=\"text-center mb-3 text-center mx-auto\">\n\t\t\t\t\t\t\t<h1  class=\"BigFont\">How we keep employees safe</h1>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<div class=\"col-sm-12 col-md-6 One\">\n\n\t\t\t\t\t\t\t<img src='../images/CDC.jpg' class=\"img-fluid img-responsive Centered\" alt=\"Trash5\" width=\"110px\" />\n\n\t\t\t\t\t\t\t<h3 class=\"text-center HeaderFont\">Obey CDC guidelines</h3>\n\t\t\t\t\t\t\t<p class=\"ParaText\">Lorem ipsum Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum Lorem ipsum </p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-sm-12 col-md-6 Two\">\n\n\n\t\t\t\t\t\t\t<img src='../images/Machine.jpg' class=\"img-fluid img-responsive Centered\" alt=\"Trash5\" width=\"110px\" />\n\n\t\t\t\t\t\t\t<h3 class=\"text-center HeaderFont\">Clean windows</h3>\n\t\t\t\t\t\t\t<p class=\"ParaText\">Lorem ipsum Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum Lorem ipsum </p>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"Space\">\n\t\t\t\t\t<p>Text</p>\n\t\t\t\t</div>\n\n\n\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\n\nexport default Home;","import React, { Component } from 'react';\n\nclass Home2 extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<img src='images/Main_logo.png' class=\"img-fluid Centered Padding\" alt=\"Logo\" width=\"110px\"/>\n\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t<div className=\"row my-3\">\n\t\t\t\t\t\t\t<div className=\"RedDivBorder\"></div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div class=\"text-center mb-3 text-center mx-auto\">\n\t\t\t\t\t\t\t\t<h1 class=\"text-center BigFont\">What we doTesting123</h1>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"col-sm-12 col-md-4\">\n\n\t\t\t\t\t\t\t<img src='images/trash.png' class=\"img-fluid img-responsive Centered\" alt=\"Trash5\" width=\"100px\" />\n\n\n\t\t\t\t\t\t\t<h1 class=\"text-center HeaderFont\">Manage all forms of waste</h1>\n\t\t\t\t\t\t\t<p class=\"ParaText\">Lorem ipsum Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum Lorem ipsum </p>\n\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t<div class=\"col-sm-12 col-md-4 Two\">\n\t\t\t\t\t\t\t<img src='../images/Sprayer.png' class=\"img-fluid img-responsive Centered\" alt=\"Trash5\" width=\"110px\" />\n\t\t\t\t\t\t\t<h1 class=\"text-center HeaderFont\">Clean windows</h1>\n\t\t\t\t\t\t\t<p class=\"ParaText\">Lorem ipsum Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum Lorem ipsum </p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-sm-12 col-md-4 Three\">\n\n\t\t\t\t\t\t\t<img src='../images/MOP.jpg' class=\"img-fluid img-responsive Centered\" alt=\"Trash5\" width=\"110px\" />\n\t\t\t\t\t\t\t<h3 class=\"text-center HeaderFont\">Disinfect Floors</h3>\n\t\t\t\t\t\t\t<p class=\"ParaText\">Lorem ipsum Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum Lorem ipsum </p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"row my-3\">\n\t\t\t\t\t\t<div className=\"RedDivBorder\"></div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div class=\"text-center mb-3 text-center mx-auto\">\n\t\t\t\t\t\t\t<h1  class=\"BigFont\">How we keep employees safe</h1>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<div class=\"col-sm-12 col-md-6 One\">\n\n\t\t\t\t\t\t\t<img src='../images/CDC.jpg' class=\"img-fluid img-responsive Centered\" alt=\"Trash5\" width=\"110px\" />\n\n\t\t\t\t\t\t\t<h3 class=\"text-center HeaderFont\">Obey CDC guidelines</h3>\n\t\t\t\t\t\t\t<p class=\"ParaText\">Lorem ipsum Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum Lorem ipsum </p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-sm-12 col-md-6 Two\">\n\n\n\t\t\t\t\t\t\t<img src='../images/Machine.jpg' class=\"img-fluid img-responsive Centered\" alt=\"Trash5\" width=\"110px\" />\n\n\t\t\t\t\t\t\t<h3 class=\"text-center HeaderFont\">Clean windows</h3>\n\t\t\t\t\t\t\t<p class=\"ParaText\">Lorem ipsum Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum  Lorem ipsum Lorem ipsum </p>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"Space\">\n\t\t\t\t\t<p>Text</p>\n\t\t\t\t</div>\n\n\n\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\n\nexport default Home2;","import React, { Component } from 'react';\n\nclass TopModal extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <div class=\"col-sm-9 img-fluid Centered\">\n                <img src='images/Carraige_Mail.png' class=\"img-fluid Centered Padding\" alt=\"Logo\" />\n\n                </div>\n            </React.Fragment>\n\n        );\n    }\n}\n\nexport default TopModal;","//this was the first thing to add for SERVERS, anything before ADD_COMMENTS is irrelevant, such as ADD_COMMENT or ADD_COMMENTS\nexport const ADD_CLEANER = 'ADD_CLEANER';\nexport const CLEANER_FAILELD = 'CLEANER_FAILED';","\n//THIS IS USED FOR ONCLICK ON PHOTO FROM NUCAMP SITE\n\n\n// The * acts as a wildcard that allows one to import all named exports at once\nimport * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\n\n\n\n\n\nexport const addCleaner = cleaner => ({\n    type: ActionTypes.ADD_CLEANER,\n    payload: cleaner\n\n});\n\n//You can add the authorization id in the headers below in postCleaner eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MTU1YTAxOGY0NTM3YTRiMmNmMWUxOTMiLCJpYXQiOjE2MzM0NzMyMzUsImV4cCI6MTYzMzQ3NjgzNX0.pfHVPFaY75TwVUTF-PQ7gT7sz4cFjwcb0G8FiXO9XJQeyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MTU1YTAxOGY0NTM3YTRiMmNmMWUxOTMiLCJpYXQiOjE2MzM0NzMyMzUsImV4cCI6MTYzMzQ3NjgzNX0.pfHVPFaY75TwVUTF-PQ7gT7sz4cFjwcb0G8FiXO9XJQeyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MTU1YTAxOGY0NTM3YTRiMmNmMWUxOTMiLCJpYXQiOjE2MzM0NzMyMzUsImV4cCI6MTYzMzQ3NjgzNX0.pfHVPFaY75TwVUTF-PQ7gT7sz4cFjwcb0G8FiXO9XJQ\nexport const postCleaner = (cleanerId, fullname, phone, email, location) => dispatch => {\n    // //pass in all attributes\n    const newCleaner = {\n        cleanerId: cleanerId,\n        fullname: fullname,\n        phone: phone,\n        email: email,\n        location: location\n    };\n    newCleaner.date = new Date().toISOString();\n    console.log('baseUrl', baseUrl);\n    console.log('Cleaner ', newCleaner);\n\n    const bearer = \"Bearer \" + localStorage.getItem('token');\n\n    return fetch('http://localhost:3000/readytowork', {\n        method: \"POST\",\n        body: JSON.stringify(newCleaner),\n        headers: {\n            \"Content-Type\": \"application/json\",\n            'Authorization': bearer\n        },\n        //credentials: 'same-origin'\n    })\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => { throw error; }\n        )\n        .then(response => response.json())\n        .then(r => console.log(r))\n        //.then(response => dispatch(addCleaner(response)))\n        .catch(error => {\n            console.log('post comment', error.message);\n            alert('Your comment could not be posted/nError: ' + error.message);\n        });\n};\n","export const baseUrl = 'http://localhost:3000/';\n","import React, { Component } from 'react';\nimport { Button, Label, Col, Row } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { postCleaner } from '../redux/ActionCreators';\nimport { baseUrl } from '../shared/baseUrl';\n\nimport { connect } from 'react-redux';\n\n//recieves value and makes sure that value recieves true or false\nconst required = val => val && val.length;\n//wrap a function inside of a function (2 arrow functions)\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\n//checks to see if email begins with A-Z and checks for numbers\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n\n\nclass BottomModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false,\n            fullname: '',\n            email: '',\n            phone: '',\n            location: '',\n            touched: {\n                fullname: false,\n                email: false,\n                phone: false\n            }\n        };\n        this.toggleNav = this.toggleNav.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n    }\n\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n\n\n    handleSubmit(values) {\n        //alert(`id: ${this.props.cleanerId} name: ${values.fullname} phone: ${values.phone} email: ${values.email}`);\n        // console.log(baseUrl)\n\n        console.log(this.props.postCleaner);\n        this.props.postCleaner(this.props.cleanerId, values.fullname, values.phone, values.email, values.location);\n        alert(`Welcome to Carriage Town Cleaning and thanks for signing up!`);\n    }\n\n    render() {\n\n\n        console.log('bottom modal props: ', this.props);\n\n        return (\n            <React.Fragment>\n                <div className=\"row row-content\">\n\n                    <div className=\"col-md-10\">\n                        <LocalForm onSubmit={values => this.handleSubmit(values)}>\n\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"fullname\" md={2}>Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".fullname\" id=\"fullname\"\n                                        name=\"fullname\"\n                                        className=\"form-control\"\n                                        placeholder=\"Name\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(2),\n                                            maxLength: maxLength(20),\n                                        }}\n\n                                    />\n\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".Name\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 20 characters or less',\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\"\n                                        name=\"email\"\n                                        className=\"form-control\"\n                                        placeholder=\"Email\"\n                                        validators={{\n                                            required,\n                                            validEmail\n                                        }}\n\n                                    />\n\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".Email\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Must be a valid email'\n                                        }}\n                                    />\n\n\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"phone\" md={2}>Phone</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".phone\" id=\"phone\" name=\"phone\"\n                                        className=\"form-control\"\n                                        placeholder=\"Phone\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(10),\n                                            maxLength: maxLength(15),\n                                            isNumber\n                                        }}\n\n                                    />\n\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".Phone\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: \"Required\",\n                                            minLength: \"Must be at least 10 characters\",\n                                            MaxLength: \"Must be at 20 characters or less\",\n                                            isNumber: \"Must be a number\"\n                                        }}\n                                    />\n\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"location\" md={2}>Location</Label>\n                                <Col md={10}>\n                                    <Control.select model=\".location\" id=\"location\" name=\"location\"\n                                        className=\"form-control\"\n                                        placeholder=\"location\"\n                                        validators={{\n                                            required\n                                        }}\n\n                                    >   <option value=\"\">select a location</option>\n                                        <option value=\"Location1\">Location 1</option>\n                                        <option value=\"Location2\">Location 2</option>\n                                        <option value=\"Location3\">Location 3</option>\n                                        <option value=\"Location4\">Location 4</option>\n                                        <option value=\"Location5\">Location 5</option>\n                                        <option value=\"Location6\">Location 6</option>\n                                        <option value=\"Location7\">Location 7</option>\n                                        <option value=\"Location8\">Location 8</option>\n                                        <option value=\"Location9\">Location 9</option>\n                                        <option value=\"Location10\">Location 10</option>\n                                        <option value=\"Location11\">Location 11</option>\n                                        <option value=\"Location12\">Location 12</option>\n                                        <option value=\"Location13\">Location 13</option>\n                                        <option value=\"Location14\">Location 14</option>\n                                        <option value=\"Location15\">Location 15</option>\n                                        <option value=\"Location16\">Location 16</option>\n                                        <option value=\"Location17\">Location 17</option>\n                                        <option value=\"Location18\">Location 18</option>\n\n                                    </Control.select>\n\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".location\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: \"Required\"\n                                        }}\n                                    />\n\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Col md={{ size: 10, offset: 2 }} />\n                                <Button type=\"submit\" color=\"primary\">Submit</Button>\n                            </Row>\n\n                        </LocalForm>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapDispatchToProps = {\n    postCleaner: (cleanerId, fullname, phone, email, location) => postCleaner(cleanerId, fullname, phone, email, location)\n};\n\nexport default connect(null, mapDispatchToProps)(BottomModal)","import React, { Component } from 'react';\nimport { Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Nav, Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport TopModal from './TopModal';\nimport BottomModal from './BottomModal';\nimport Home from './Home';\n\nclass NavbarTop extends Component {\n\n    constructor(props) {\n        super(props);\n\n\n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false\n        };\n        //bind event handler\n        //ensures that when called this is binded to component\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n    }\n\n\n    //! is the logica\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n\n                <Navbar sticky=\"top\" expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarBrand className=\"mr-auto TopText\" href=\"/\">\n                            <img src='../images/Logo.png' alt=\"Trash5\" width=\"110px\" />\n                        </NavbarBrand>\n                        <NavbarToggler onClick={this.toggleNav} />\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar className=\"navbar TopText\">\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/Home\">\n                                        <div className=\"BackBlack\">\n                                            <p className=\"TopText\">Home</p>\n                                        </div>\n                                    </NavLink>\n                                </NavItem>\n\n\n\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/Locations\">\n                                        <div className=\"BackBlack\">\n                                            <p class=\"TopText\">Locations</p>\n                                        </div>\n                                    </NavLink>\n                                </NavItem>\n\n                            </Nav>\n                            <Button className=\"offset-md-4\" onClick={this.toggleModal}>\n                                <p class=\"ModalButton\">Ready to work?</p>\n                            </Button>\n                        </Collapse>\n                    </div>\n                </Navbar>\n\n\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>\n                        <TopModal />\n                    </ModalHeader>\n                    <ModalBody>\n                        <BottomModal />\n                    </ModalBody>\n\n                </Modal>\n\n                  \n\n            </React.Fragment>\n        );\n    }\n    /*isOpen refers to true/false statement of modal, which is set to this.state = false\n    toggle refers to the toggle action which closes it when opened\n    */\n}\n\nexport default NavbarTop;","import React, { Component }  from 'react';\n\n\nclass Footer extends Component {\n    render() {\n        return(\n            <div className=\"Footer\">\n                <h1>Some text at the bottom</h1>\n            </div>\n        );\n    }\n}\n\nexport default Footer;","import React, { Component } from 'react';\n\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport { Carousel } from 'react-responsive-carousel';\nimport { Link, useHistory } from 'react-router-dom';\n\n\nclass Locations extends Component {\n  render() {\n\n    // function History() {\n    //   const history = useHistory();\n\n    //   const States = () => {\n    //     history.push(\"/states\");\n    //     history.push(\"/states2\");\n    //     history.push(\"/states3\");\n    //   }\n\n    // }\n\n    return (\n      <React.Fragment>\n        <h1 className=\"stateHeader\">States</h1>\n        <Carousel className=\"col-5 carousel\">\n          <Link to=\"/States\">\n            <div>\n              <h4>Location 1</h4>\n              <img src=\"images/favicon.png\" alt=\"\" />\n              <p>Some text here</p>\n            </div>\n          </Link>\n          <Link to=\"/States2\">\n            <div>\n              <h4>Location 2</h4>\n              <img src=\"images/favicon.png\" alt=\"\" />\n              <p>Some text here</p>\n            </div>\n          </Link>\n          <Link to=\"/States3\">\n            <div>\n              <h4>Location 3</h4>\n              <img src=\"images/favicon.png\" alt=\"\" />\n              <p>Some text here</p>\n            </div>\n          </Link>\n        </Carousel>\n      </React.Fragment>\n\n    );\n  }\n\n}\n\n\n\nexport default Locations;\n\n\n\n\n","import React, { Component } from 'react';\nimport { Button, Label, Col, Row } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { postCleaner } from '../redux/ActionCreators';\nimport { baseUrl } from '../shared/baseUrl';\n\nimport { connect } from 'react-redux';\n\n//Wiscoinsin locations \n/*\nAppleton,\nEauClaire,\nGreenBay,\nMadisonEast,\nMadisonWest,\nMilwaukee\n*/\n\n//recieves value and makes sure that value recieves true or false\nconst required = val => val && val.length;\n//wrap a function inside of a function (2 arrow functions)\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\n//checks to see if email begins with A-Z and checks for numbers\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n\n\nclass LocationOneModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isNavOpen: false,\n      isModalOpen: false,\n      fullname: '',\n      email: '',\n      phone: '',\n      location: '',\n      touched: {\n        fullname: false,\n        email: false,\n        phone: false\n      }\n    };\n    this.toggleNav = this.toggleNav.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n  }\n\n  toggleNav() {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen\n    });\n  }\n\n\n\n  handleSubmit(values) {\n    //alert(`id: ${this.props.cleanerId} name: ${values.fullname} phone: ${values.phone} email: ${values.email}`);\n    // console.log(baseUrl)\n\n    console.log(this.props.postCleaner);\n    this.props.postCleaner(this.props.cleanerId, values.fullname, values.phone, values.email, values.location);\n    alert(`Welcome to Carriage Town Cleaning and thanks for signing up!`);\n  }\n\n  render() {\n\n\n    console.log('bottom modal props: ', this.props);\n\n    return (\n      <React.Fragment>\n        <div className=\"row row-content\">\n\n          <div className=\"col-md-10\">\n            <LocalForm onSubmit={values => this.handleSubmit(values)}>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"fullname\" md={2}>Name</Label>\n                <Col md={10}>\n                  <Control.text model=\".fullname\" id=\"fullname\"\n                    name=\"fullname\"\n                    className=\"form-control\"\n                    placeholder=\"Name\"\n                    validators={{\n                      required,\n                      minLength: minLength(2),\n                      maxLength: maxLength(20),\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Name\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: 'Required',\n                      minLength: 'Must be at least 2 characters',\n                      maxLength: 'Must be 20 characters or less',\n                    }}\n                  />\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"email\" md={2}>Email</Label>\n                <Col md={10}>\n                  <Control.text model=\".email\" id=\"email\"\n                    name=\"email\"\n                    className=\"form-control\"\n                    placeholder=\"Email\"\n                    validators={{\n                      required,\n                      validEmail\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Email\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: 'Required',\n                      validEmail: 'Must be a valid email'\n                    }}\n                  />\n\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"phone\" md={2}>Phone</Label>\n                <Col md={10}>\n                  <Control.text model=\".phone\" id=\"phone\" name=\"phone\"\n                    className=\"form-control\"\n                    placeholder=\"Phone\"\n                    validators={{\n                      required,\n                      minLength: minLength(10),\n                      maxLength: maxLength(15),\n                      isNumber\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Phone\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: \"Required\",\n                      minLength: \"Must be at least 10 characters\",\n                      MaxLength: \"Must be at 20 characters or less\",\n                      isNumber: \"Must be a number\"\n                    }}\n                  />\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"location\" md={2}>Location</Label>\n                <Col md={10}>\n                  <Control.select model=\".location\" id=\"location\" name=\"location\"\n                    className=\"form-control\"\n                    placeholder=\"location\"\n                    validators={{\n                      required\n                    }}\n\n                  > <option selected value=\"\">select a location</option>\n                    <option disabled hidden value=\"MadisonWest\">MadisonWest</option>\n                    <option value=\"Location1\">Location 1</option>\n                    <option disabled hidden value=\"Milwaukee\">Milwaukee</option>\n                  </Control.select>\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".location\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: \"Required\"\n                    }}\n                  />\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Col md={{ size: 10, offset: 2 }} />\n                <Button type=\"submit\" color=\"primary\">Submit</Button>\n              </Row>\n\n            </LocalForm>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  postCleaner: (cleanerId, fullname, phone, email, location) => postCleaner(cleanerId, fullname, phone, email, location)\n};\n\nexport default connect(null, mapDispatchToProps)(LocationOneModal)","import React, { Component } from 'react';\nimport { Button, Label, Col, Row } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { postCleaner } from '../redux/ActionCreators';\nimport { baseUrl } from '../shared/baseUrl';\n\nimport { connect } from 'react-redux';\n\n//Wiscoinsin locations \n/*\nAppleton,\nEauClaire,\nGreenBay,\nMadisonEast,\nMadisonWest,\nMilwaukee\n*/\n\n//recieves value and makes sure that value recieves true or false\nconst required = val => val && val.length;\n//wrap a function inside of a function (2 arrow functions)\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\n//checks to see if email begins with A-Z and checks for numbers\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n\n\nclass LocationTwoModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false,\n            fullname: '',\n            email: '',\n            phone: '',\n            location: '',\n            touched: {\n                fullname: false,\n                email: false,\n                phone: false\n            }\n        };\n        this.toggleNav = this.toggleNav.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n    }\n\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n\n\n    handleSubmit(values) {\n        //alert(`id: ${this.props.cleanerId} name: ${values.fullname} phone: ${values.phone} email: ${values.email}`);\n        // console.log(baseUrl)\n\n        console.log(this.props.postCleaner);\n        this.props.postCleaner(this.props.cleanerId, values.fullname, values.phone, values.email, values.location);\n        alert(`Welcome to Carriage Town Cleaning and thanks for signing up!`);\n    }\n\n    render() {\n\n\n        console.log('bottom modal props: ', this.props);\n\n        return (\n            <React.Fragment>\n                <div className=\"row row-content\">\n\n                    <div className=\"col-md-10\">\n                        <LocalForm onSubmit={values => this.handleSubmit(values)}>\n\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"fullname\" md={2}>Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".fullname\" id=\"fullname\"\n                                        name=\"fullname\"\n                                        className=\"form-control\"\n                                        placeholder=\"Name\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(2),\n                                            maxLength: maxLength(20),\n                                        }}\n\n                                    />\n\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".Name\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 20 characters or less',\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\"\n                                        name=\"email\"\n                                        className=\"form-control\"\n                                        placeholder=\"Email\"\n                                        validators={{\n                                            required,\n                                            validEmail\n                                        }}\n\n                                    />\n\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".Email\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Must be a valid email'\n                                        }}\n                                    />\n\n\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"phone\" md={2}>Phone</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".phone\" id=\"phone\" name=\"phone\"\n                                        className=\"form-control\"\n                                        placeholder=\"Phone\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(10),\n                                            maxLength: maxLength(15),\n                                            isNumber\n                                        }}\n\n                                    />\n\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".Phone\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: \"Required\",\n                                            minLength: \"Must be at least 10 characters\",\n                                            MaxLength: \"Must be at 20 characters or less\",\n                                            isNumber: \"Must be a number\"\n                                        }}\n                                    />\n\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"location\" md={2}>Location</Label>\n                                <Col md={10}>\n                                    <Control.select model=\".location\" id=\"location\" name=\"location\"\n                                        className=\"form-control\"\n                                        placeholder=\"location\"\n                                        validators={{\n                                            required\n                                        }}\n\n                                    > <option selected value=\"\">select a location</option>\n                                        <option disabled hidden value=\"MadisonWest\">MadisonWest</option>\n                                        <option value=\"Location2\">Location 2</option>\n                                        <option disabled hidden value=\"Milwaukee\">Milwaukee</option>\n                                    </Control.select>\n\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".location\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: \"Required\"\n                                        }}\n                                    />\n\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Col md={{ size: 10, offset: 2 }} />\n                                <Button type=\"submit\" color=\"primary\">Submit</Button>\n                            </Row>\n\n                        </LocalForm>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapDispatchToProps = {\n    postCleaner: (cleanerId, fullname, phone, email, location) => postCleaner(cleanerId, fullname, phone, email, location)\n};\n\nexport default connect(null, mapDispatchToProps)(LocationTwoModal)","import React, { Component } from 'react';\nimport { Button, Label, Col, Row } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { postCleaner } from '../redux/ActionCreators';\nimport { baseUrl } from '../shared/baseUrl';\n\nimport { connect } from 'react-redux';\n\n//Wiscoinsin locations \n/*\nAppleton,\nEauClaire,\nGreenBay,\nMadisonEast,\nMadisonWest,\nMilwaukee\n*/\n\n//recieves value and makes sure that value recieves true or false\nconst required = val => val && val.length;\n//wrap a function inside of a function (2 arrow functions)\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\n//checks to see if email begins with A-Z and checks for numbers\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n\n\nclass LocationThreeModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isNavOpen: false,\n      isModalOpen: false,\n      fullname: '',\n      email: '',\n      phone: '',\n      location: '',\n      touched: {\n        fullname: false,\n        email: false,\n        phone: false\n      }\n    };\n    this.toggleNav = this.toggleNav.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n  }\n\n  toggleNav() {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen\n    });\n  }\n\n\n\n  handleSubmit(values) {\n    //alert(`id: ${this.props.cleanerId} name: ${values.fullname} phone: ${values.phone} email: ${values.email}`);\n    // console.log(baseUrl)\n\n    console.log(this.props.postCleaner);\n    this.props.postCleaner(this.props.cleanerId, values.fullname, values.phone, values.email, values.location);\n    alert(`Welcome to Carriage Town Cleaning and thanks for signing up!`);\n  }\n\n  render() {\n\n\n    console.log('bottom modal props: ', this.props);\n\n    return (\n      <React.Fragment>\n        <div className=\"row row-content\">\n\n          <div className=\"col-md-10\">\n            <LocalForm onSubmit={values => this.handleSubmit(values)}>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"fullname\" md={2}>Name</Label>\n                <Col md={10}>\n                  <Control.text model=\".fullname\" id=\"fullname\"\n                    name=\"fullname\"\n                    className=\"form-control\"\n                    placeholder=\"Name\"\n                    validators={{\n                      required,\n                      minLength: minLength(2),\n                      maxLength: maxLength(20),\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Name\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: 'Required',\n                      minLength: 'Must be at least 2 characters',\n                      maxLength: 'Must be 20 characters or less',\n                    }}\n                  />\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"email\" md={2}>Email</Label>\n                <Col md={10}>\n                  <Control.text model=\".email\" id=\"email\"\n                    name=\"email\"\n                    className=\"form-control\"\n                    placeholder=\"Email\"\n                    validators={{\n                      required,\n                      validEmail\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Email\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: 'Required',\n                      validEmail: 'Must be a valid email'\n                    }}\n                  />\n\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"phone\" md={2}>Phone</Label>\n                <Col md={10}>\n                  <Control.text model=\".phone\" id=\"phone\" name=\"phone\"\n                    className=\"form-control\"\n                    placeholder=\"Phone\"\n                    validators={{\n                      required,\n                      minLength: minLength(10),\n                      maxLength: maxLength(15),\n                      isNumber\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Phone\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: \"Required\",\n                      minLength: \"Must be at least 10 characters\",\n                      MaxLength: \"Must be at 20 characters or less\",\n                      isNumber: \"Must be a number\"\n                    }}\n                  />\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"location\" md={2}>Location</Label>\n                <Col md={10}>\n                  <Control.select model=\".location\" id=\"location\" name=\"location\"\n                    className=\"form-control\"\n                    placeholder=\"location\"\n                    validators={{\n                      required\n                    }}\n\n                  > <option selected value=\"\">select a location</option>\n                    <option disabled hidden value=\"MadisonWest\">MadisonWest</option>\n                    <option value=\"Location3\">Location 3</option>\n                    <option disabled hidden value=\"Milwaukee\">Milwaukee</option>\n                  </Control.select>\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".location\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: \"Required\"\n                    }}\n                  />\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Col md={{ size: 10, offset: 2 }} />\n                <Button type=\"submit\" color=\"primary\">Submit</Button>\n              </Row>\n\n            </LocalForm>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  postCleaner: (cleanerId, fullname, phone, email, location) => postCleaner(cleanerId, fullname, phone, email, location)\n};\n\nexport default connect(null, mapDispatchToProps)(LocationThreeModal)","import React, { Component } from 'react';\nimport { Button, Label, Col, Row } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { postCleaner } from '../redux/ActionCreators';\nimport { baseUrl } from '../shared/baseUrl';\n\nimport { connect } from 'react-redux';\n\n//Wiscoinsin locations \n/*\nAppleton,\nEauClaire,\nGreenBay,\nMadisonEast,\nMadisonWest,\nMilwaukee\n*/\n\n//recieves value and makes sure that value recieves true or false\nconst required = val => val && val.length;\n//wrap a function inside of a function (2 arrow functions)\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\n//checks to see if email begins with A-Z and checks for numbers\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n\n\nclass LocationFourModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isNavOpen: false,\n      isModalOpen: false,\n      fullname: '',\n      email: '',\n      phone: '',\n      location: '',\n      touched: {\n        fullname: false,\n        email: false,\n        phone: false\n      }\n    };\n    this.toggleNav = this.toggleNav.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n  }\n\n  toggleNav() {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen\n    });\n  }\n\n\n\n  handleSubmit(values) {\n    //alert(`id: ${this.props.cleanerId} name: ${values.fullname} phone: ${values.phone} email: ${values.email}`);\n    // console.log(baseUrl)\n\n    console.log(this.props.postCleaner);\n    this.props.postCleaner(this.props.cleanerId, values.fullname, values.phone, values.email, values.location);\n    alert(`Welcome to Carriage Town Cleaning and thanks for signing up!`);\n  }\n\n  render() {\n\n\n    console.log('bottom modal props: ', this.props);\n\n    return (\n      <React.Fragment>\n        <div className=\"row row-content\">\n\n          <div className=\"col-md-10\">\n            <LocalForm onSubmit={values => this.handleSubmit(values)}>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"fullname\" md={2}>Name</Label>\n                <Col md={10}>\n                  <Control.text model=\".fullname\" id=\"fullname\"\n                    name=\"fullname\"\n                    className=\"form-control\"\n                    placeholder=\"Name\"\n                    validators={{\n                      required,\n                      minLength: minLength(2),\n                      maxLength: maxLength(20),\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Name\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: 'Required',\n                      minLength: 'Must be at least 2 characters',\n                      maxLength: 'Must be 20 characters or less',\n                    }}\n                  />\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"email\" md={2}>Email</Label>\n                <Col md={10}>\n                  <Control.text model=\".email\" id=\"email\"\n                    name=\"email\"\n                    className=\"form-control\"\n                    placeholder=\"Email\"\n                    validators={{\n                      required,\n                      validEmail\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Email\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: 'Required',\n                      validEmail: 'Must be a valid email'\n                    }}\n                  />\n\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"phone\" md={2}>Phone</Label>\n                <Col md={10}>\n                  <Control.text model=\".phone\" id=\"phone\" name=\"phone\"\n                    className=\"form-control\"\n                    placeholder=\"Phone\"\n                    validators={{\n                      required,\n                      minLength: minLength(10),\n                      maxLength: maxLength(15),\n                      isNumber\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Phone\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: \"Required\",\n                      minLength: \"Must be at least 10 characters\",\n                      MaxLength: \"Must be at 20 characters or less\",\n                      isNumber: \"Must be a number\"\n                    }}\n                  />\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"location\" md={2}>Location</Label>\n                <Col md={10}>\n                  <Control.select model=\".location\" id=\"location\" name=\"location\"\n                    className=\"form-control\"\n                    placeholder=\"location\"\n                    validators={{\n                      required\n                    }}\n\n                  > <option selected value=\"\">select a location</option>\n                    <option value=\"Location4\">Location 4</option>\n                    <option disabled hidden value=\"MadisonEast\">MadisonEast</option>\n                    <option disabled hidden value=\"Milwaukee\">Milwaukee</option>\n                  </Control.select>\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".location\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: \"Required\"\n                    }}\n                  />\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Col md={{ size: 10, offset: 2 }} />\n                <Button type=\"submit\" color=\"primary\">Submit</Button>\n              </Row>\n\n            </LocalForm>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  postCleaner: (cleanerId, fullname, phone, email, location) => postCleaner(cleanerId, fullname, phone, email, location)\n};\n\nexport default connect(null, mapDispatchToProps)(LocationFourModal)","import React, { Component } from 'react';\nimport { Button, Label, Col, Row } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { postCleaner } from '../redux/ActionCreators';\nimport { baseUrl } from '../shared/baseUrl';\n\nimport { connect } from 'react-redux';\n\n//Wiscoinsin locations \n/*\nAppleton,\nEauClaire,\nGreenBay,\nMadisonEast,\nMadisonWest,\nMilwaukee\n*/\n\n//recieves value and makes sure that value recieves true or false\nconst required = val => val && val.length;\n//wrap a function inside of a function (2 arrow functions)\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\n//checks to see if email begins with A-Z and checks for numbers\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n\n\nclass LocationFiveModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isNavOpen: false,\n      isModalOpen: false,\n      fullname: '',\n      email: '',\n      phone: '',\n      location: '',\n      touched: {\n        fullname: false,\n        email: false,\n        phone: false\n      }\n    };\n    this.toggleNav = this.toggleNav.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n  }\n\n  toggleNav() {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen\n    });\n  }\n\n\n\n  handleSubmit(values) {\n    //alert(`id: ${this.props.cleanerId} name: ${values.fullname} phone: ${values.phone} email: ${values.email}`);\n    // console.log(baseUrl)\n\n    console.log(this.props.postCleaner);\n    this.props.postCleaner(this.props.cleanerId, values.fullname, values.phone, values.email, values.location);\n    alert(`Welcome to Carriage Town Cleaning and thanks for signing up!`);\n  }\n\n  render() {\n\n\n    console.log('bottom modal props: ', this.props);\n\n    return (\n      <React.Fragment>\n        <div className=\"row row-content\">\n\n          <div className=\"col-md-10\">\n            <LocalForm onSubmit={values => this.handleSubmit(values)}>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"fullname\" md={2}>Name</Label>\n                <Col md={10}>\n                  <Control.text model=\".fullname\" id=\"fullname\"\n                    name=\"fullname\"\n                    className=\"form-control\"\n                    placeholder=\"Name\"\n                    validators={{\n                      required,\n                      minLength: minLength(2),\n                      maxLength: maxLength(20),\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Name\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: 'Required',\n                      minLength: 'Must be at least 2 characters',\n                      maxLength: 'Must be 20 characters or less',\n                    }}\n                  />\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"email\" md={2}>Email</Label>\n                <Col md={10}>\n                  <Control.text model=\".email\" id=\"email\"\n                    name=\"email\"\n                    className=\"form-control\"\n                    placeholder=\"Email\"\n                    validators={{\n                      required,\n                      validEmail\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Email\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: 'Required',\n                      validEmail: 'Must be a valid email'\n                    }}\n                  />\n\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"phone\" md={2}>Phone</Label>\n                <Col md={10}>\n                  <Control.text model=\".phone\" id=\"phone\" name=\"phone\"\n                    className=\"form-control\"\n                    placeholder=\"Phone\"\n                    validators={{\n                      required,\n                      minLength: minLength(10),\n                      maxLength: maxLength(15),\n                      isNumber\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Phone\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: \"Required\",\n                      minLength: \"Must be at least 10 characters\",\n                      MaxLength: \"Must be at 20 characters or less\",\n                      isNumber: \"Must be a number\"\n                    }}\n                  />\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"location\" md={2}>Location</Label>\n                <Col md={10}>\n                  <Control.select model=\".location\" id=\"location\" name=\"location\"\n                    className=\"form-control\"\n                    placeholder=\"location\"\n                    validators={{\n                      required\n                    }}\n\n                  > <option selected value=\"\">select a location</option>\n                    <option value=\"Location5\">Location 5</option>\n                    <option disabled hidden value=\"MadisonEast\">MadisonEast</option>\n                    <option disabled hidden value=\"Milwaukee\">Milwaukee</option>\n                  </Control.select>\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".location\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: \"Required\"\n                    }}\n                  />\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Col md={{ size: 10, offset: 2 }} />\n                <Button type=\"submit\" color=\"primary\">Submit</Button>\n              </Row>\n\n            </LocalForm>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  postCleaner: (cleanerId, fullname, phone, email, location) => postCleaner(cleanerId, fullname, phone, email, location)\n};\n\nexport default connect(null, mapDispatchToProps)(LocationFiveModal)","import React, { Component } from 'react';\nimport { Button, Label, Col, Row } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { postCleaner } from '../redux/ActionCreators';\nimport { baseUrl } from '../shared/baseUrl';\n\nimport { connect } from 'react-redux';\n\n//Wiscoinsin locations \n/*\nAppleton,\nEauClaire,\nGreenBay,\nMadisonEast,\nMadisonWest,\nMilwaukee\n*/\n\n//recieves value and makes sure that value recieves true or false\nconst required = val => val && val.length;\n//wrap a function inside of a function (2 arrow functions)\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\n//checks to see if email begins with A-Z and checks for numbers\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n\n\nclass LocationSixModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isNavOpen: false,\n      isModalOpen: false,\n      fullname: '',\n      email: '',\n      phone: '',\n      location: '',\n      touched: {\n        fullname: false,\n        email: false,\n        phone: false\n      }\n    };\n    this.toggleNav = this.toggleNav.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n  }\n\n  toggleNav() {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen\n    });\n  }\n\n\n\n  handleSubmit(values) {\n    //alert(`id: ${this.props.cleanerId} name: ${values.fullname} phone: ${values.phone} email: ${values.email}`);\n    // console.log(baseUrl)\n\n    console.log(this.props.postCleaner);\n    this.props.postCleaner(this.props.cleanerId, values.fullname, values.phone, values.email, values.location);\n    alert(`Welcome to Carriage Town Cleaning and thanks for signing up!`);\n  }\n\n  render() {\n\n\n    console.log('bottom modal props: ', this.props);\n\n    return (\n      <React.Fragment>\n        <div className=\"row row-content\">\n\n          <div className=\"col-md-10\">\n            <LocalForm onSubmit={values => this.handleSubmit(values)}>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"fullname\" md={2}>Name</Label>\n                <Col md={10}>\n                  <Control.text model=\".fullname\" id=\"fullname\"\n                    name=\"fullname\"\n                    className=\"form-control\"\n                    placeholder=\"Name\"\n                    validators={{\n                      required,\n                      minLength: minLength(2),\n                      maxLength: maxLength(20),\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Name\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: 'Required',\n                      minLength: 'Must be at least 2 characters',\n                      maxLength: 'Must be 20 characters or less',\n                    }}\n                  />\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"email\" md={2}>Email</Label>\n                <Col md={10}>\n                  <Control.text model=\".email\" id=\"email\"\n                    name=\"email\"\n                    className=\"form-control\"\n                    placeholder=\"Email\"\n                    validators={{\n                      required,\n                      validEmail\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Email\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: 'Required',\n                      validEmail: 'Must be a valid email'\n                    }}\n                  />\n\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"phone\" md={2}>Phone</Label>\n                <Col md={10}>\n                  <Control.text model=\".phone\" id=\"phone\" name=\"phone\"\n                    className=\"form-control\"\n                    placeholder=\"Phone\"\n                    validators={{\n                      required,\n                      minLength: minLength(10),\n                      maxLength: maxLength(15),\n                      isNumber\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Phone\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: \"Required\",\n                      minLength: \"Must be at least 10 characters\",\n                      MaxLength: \"Must be at 20 characters or less\",\n                      isNumber: \"Must be a number\"\n                    }}\n                  />\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"location\" md={2}>Location</Label>\n                <Col md={10}>\n                  <Control.select model=\".location\" id=\"location\" name=\"location\"\n                    className=\"form-control\"\n                    placeholder=\"location\"\n                    validators={{\n                      required\n                    }}\n\n                  > <option selected value=\"\">select a location</option>\n                    <option value=\"Location6\">Location 6</option>\n                    <option disabled hidden value=\"MadisonEast\">MadisonEast</option>\n                    <option disabled hidden value=\"Milwaukee\">Milwaukee</option>\n                  </Control.select>\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".location\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: \"Required\"\n                    }}\n                  />\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Col md={{ size: 10, offset: 2 }} />\n                <Button type=\"submit\" color=\"primary\">Submit</Button>\n              </Row>\n\n            </LocalForm>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  postCleaner: (cleanerId, fullname, phone, email, location) => postCleaner(cleanerId, fullname, phone, email, location)\n};\n\nexport default connect(null, mapDispatchToProps)(LocationSixModal)","//THIS ALLOWS ONE TO BE ABLE TO DISPLAY INFO AFTER CLICK ON BUTTON\n\nimport React, { Component } from 'react';\nimport { Navbar, NavbarBrand, Jumbotron, NavbarToggler, Collapse, NavItem, Nav, Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { Route, Switch, Link, NavLink } from 'react-router-dom';\nimport Home from './Home';\nimport TopModal from './TopModal';\nimport LocationOneModal from './LocationOneModal';\nimport LocationTwoModal from './LocationTwoModal';\nimport LocationThreeModal from './LocationThreeModal';\nimport LocationFourModal from './LocationFourModal';\nimport LocationFiveModal from './LocationFiveModal';\nimport LocationSixModal from './LocationSixModal';\n\nclass States extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isModalOpen: false,\n            isModalOpen2: false,\n            isModalOpen3: false,\n            isModalOpen4: false,\n            isModalOpen5: false,\n            isModalOpen6: false\n        };\n\n        this.toggleModal = this.toggleModal.bind(this);\n        this.toggleModal2 = this.toggleModal2.bind(this);\n        this.toggleModal3 = this.toggleModal3.bind(this);\n        this.toggleModal4 = this.toggleModal4.bind(this);\n        this.toggleModal5 = this.toggleModal5.bind(this);\n        this.toggleModal6 = this.toggleModal6.bind(this);\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    toggleModal2() {\n        this.setState({\n            isModalOpen2: !this.state.isModalOpen2\n        });\n    }\n\n    toggleModal3() {\n        this.setState({\n            isModalOpen3: !this.state.isModalOpen3\n        });\n    }\n\n    toggleModal4() {\n        this.setState({\n            isModalOpen4: !this.state.isModalOpen4\n        });\n    }\n\n    toggleModal5() {\n        this.setState({\n            isModalOpen5: !this.state.isModalOpen5\n        });\n    }\n\n    toggleModal6() {\n        this.setState({\n            isModalOpen6: !this.state.isModalOpen6\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"container\">\n                    <div class=\"row mx-auto mb-5 mt-3\">\n                        <div class=\"col-sm-12 col-lg New2\">\n                            <h1 class=\"ParaText2\">Our Locations</h1>\n                        </div>\n                    </div>\n\n                    <div class=\"row mb-5 mt-4\">\n                        <div class=\"card col-sm-12 col-md-5 col-offset-md-1\">\n                            <img class=\"card-img-top Background\" alt=\"Card 2\" src=\"images/favicon.png\" />\n                            <div class=\"card-body\">\n                                <h2 class=\"New\">Location 1</h2>\n                                <p class=\"card-text ParaText\">Text here that describes the site itself. Add a photo of someone inside of the company who works at Carraige Town Cleaning and Disinfectants</p>\n                            </div>\n                            <Button onClick={this.toggleModal}>\n                                <p className=\"ModalButton\">Interested?</p>\n                            </Button>\n\n                        </div>\n\n                        <div class=\"card col-sm-12 col-md-5 col-offset-md-1\">\n                            <img class=\"card-img-top Background\" alt=\"Card \" src=\"images/favicon.png\" />\n                            <div class=\"card-body\">\n                                <h2 class=\"New\">Location 2</h2>\n                                <p class=\"card-text ParaText\">Text here that describes the Site itself. Add a photo of someone inside of the company who works at Carraige Town Cleaning and Disinfectants</p>\n                            </div>\n                            <Button onClick={this.toggleModal2}>\n                                <p className=\"ModalButton\">Interested?</p>\n                            </Button>\n\n                        </div>\n                    </div>\n\n                    <div class=\"row mb-5 mt-4\">\n                        <div class=\"card col-sm-12 col-md-5 col-offset-md-1\">\n                            <img class=\"card-img-top Background\" alt=\"Card \" src=\"images/favicon.png\" />\n                            <div class=\"card-body\">\n                                <h2 class=\"New\">Location 3</h2>\n                                <p class=\"card-text ParaText\">Text here that describes the site itself. Add a photo of someone inside of the company who works at Carraige Town Cleaning and Disinfectants</p>\n                            </div>\n                            <Button onClick={this.toggleModal3}>\n                                <p className=\"ModalButton\">Interested?</p>\n                            </Button>\n\n                        </div>\n\n                        <div class=\"card col-sm-12 col-md-5 col-offset-md-1\">\n                            <img class=\"card-img-top Background\" alt=\"Card \" src=\"images/favicon.png\" />\n                            <div class=\"card-body\">\n                                <h2 class=\"New\">Location 4</h2>\n                                <p class=\"card-text ParaText\">Text here that describes the site itself. Add a photo of someone inside of the company who works at Carraige Town Cleaning and Disinfectants</p>\n                            </div>\n                            <Button onClick={this.toggleModal4}>\n                                <p className=\"ModalButton\">Interested?</p>\n                            </Button>\n\n                        </div>\n                    </div>\n\n                    <div class=\"row mb-5 mt-4\">\n                        <div class=\"card col-sm-12 col-md-5 col-offset-md-1\">\n                            <img class=\"card-img-top Background\" alt=\"Card \" src=\"images/favicon.png\" />\n                            <div class=\"card-body\">\n                                <h2 class=\"New\">Location 5</h2>\n                                <p class=\"card-text ParaText\">Text here that describes the site itself. Add a photo of someone inside of the company who works at Carraige Town Cleaning and Disinfectants</p>\n                            </div>\n                            <Button onClick={this.toggleModal5}>\n                                <p className=\"ModalButton\">Interested?</p>\n                            </Button>\n\n                        </div>\n\n                        <div class=\"card col-sm-12 col-md-5 col-offset-md-1\">\n                            <img class=\"card-img-top Background\" alt=\"Card \" src=\"images/favicon.png\" />\n                            <div class=\"card-body\">\n                                <h2 class=\"New\">Location 6</h2>\n                                <p class=\"card-text ParaText\">Text here that describes the site itself. Add a photo of someone inside of the company who works at Carraige Town Cleaning and Disinfectants</p>\n                            </div>\n                            <Button onClick={this.toggleModal6}>\n                                <p className=\"ModalButton\">Interested?</p>\n                            </Button>\n\n                        </div>\n                    </div>\n\n\n                </div>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>\n                        <TopModal />\n                    </ModalHeader>\n                    <ModalBody>\n                        <LocationOneModal />\n                    </ModalBody>\n\n                </Modal>\n\n                <Modal isOpen={this.state.isModalOpen2} toggle={this.toggleModal2}>\n                    <ModalHeader toggle={this.toggleModal2}>\n                        <TopModal />\n                    </ModalHeader>\n                    <ModalBody>\n                        <LocationTwoModal />\n                    </ModalBody>\n\n                </Modal>\n\n                <Modal isOpen={this.state.isModalOpen3} toggle={this.toggleModal3}>\n                    <ModalHeader toggle={this.toggleModal3}>\n                        <TopModal />\n                    </ModalHeader>\n                    <ModalBody>\n                        <LocationThreeModal />\n                    </ModalBody>\n\n                </Modal>\n\n                <Modal isOpen={this.state.isModalOpen4} toggle={this.toggleModal4}>\n                    <ModalHeader toggle={this.toggleModal4}>\n                        <TopModal />\n                    </ModalHeader>\n                    <ModalBody>\n                        <LocationFourModal />\n                    </ModalBody>\n\n                </Modal>\n\n                <Modal isOpen={this.state.isModalOpen5} toggle={this.toggleModal5}>\n                    <ModalHeader toggle={this.toggleModal5}>\n                        <TopModal />\n                    </ModalHeader>\n                    <ModalBody>\n                        <LocationFiveModal />\n                    </ModalBody>\n\n                </Modal>\n\n                <Modal isOpen={this.state.isModalOpen6} toggle={this.toggleModal6}>\n                    <ModalHeader toggle={this.toggleModal6}>\n                        <TopModal />\n                    </ModalHeader>\n                    <ModalBody>\n                        <LocationSixModal />\n                    </ModalBody>\n\n                </Modal>\n\n            </React.Fragment>\n        )\n    }\n}\n\nexport default States;\n\n","import React, { Component } from 'react';\nimport { Button, Label, Col, Row } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { postCleaner } from '../redux/ActionCreators';\nimport { baseUrl } from '../shared/baseUrl';\n\nimport { connect } from 'react-redux';\n\n//Illinois locations\n/*\nChicago,\nBloomington,\nNaperville,\nPeoria,\nRockford,\nSpringfield\n*/\n\n//recieves value and makes sure that value recieves true or false\nconst required = val => val && val.length;\n//wrap a function inside of a function (2 arrow functions)\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\n//checks to see if email begins with A-Z and checks for numbers\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n\n\nclass LocationSevenModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isNavOpen: false,\n      isModalOpen: false,\n      fullname: '',\n      email: '',\n      phone: '',\n      location: '',\n      touched: {\n        fullname: false,\n        email: false,\n        phone: false\n      }\n    };\n    this.toggleNav = this.toggleNav.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n  }\n\n  toggleNav() {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen\n    });\n  }\n\n\n\n  handleSubmit(values) {\n    //alert(`id: ${this.props.cleanerId} name: ${values.fullname} phone: ${values.phone} email: ${values.email}`);\n    // console.log(baseUrl)\n\n    console.log(this.props.postCleaner);\n    this.props.postCleaner(this.props.cleanerId, values.fullname, values.phone, values.email, values.location);\n    alert(`Welcome to Carriage Town Cleaning and thanks for signing up!`);\n  }\n\n  render() {\n\n\n    console.log('bottom modal props: ', this.props);\n\n    return (\n      <React.Fragment>\n        <div className=\"row row-content\">\n\n          <div className=\"col-md-10\">\n            <LocalForm onSubmit={values => this.handleSubmit(values)}>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"fullname\" md={2}>Name</Label>\n                <Col md={10}>\n                  <Control.text model=\".fullname\" id=\"fullname\"\n                    name=\"fullname\"\n                    className=\"form-control\"\n                    placeholder=\"Name\"\n                    validators={{\n                      required,\n                      minLength: minLength(2),\n                      maxLength: maxLength(20),\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Name\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: 'Required',\n                      minLength: 'Must be at least 2 characters',\n                      maxLength: 'Must be 20 characters or less',\n                    }}\n                  />\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"email\" md={2}>Email</Label>\n                <Col md={10}>\n                  <Control.text model=\".email\" id=\"email\"\n                    name=\"email\"\n                    className=\"form-control\"\n                    placeholder=\"Email\"\n                    validators={{\n                      required,\n                      validEmail\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Email\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: 'Required',\n                      validEmail: 'Must be a valid email'\n                    }}\n                  />\n\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"phone\" md={2}>Phone</Label>\n                <Col md={10}>\n                  <Control.text model=\".phone\" id=\"phone\" name=\"phone\"\n                    className=\"form-control\"\n                    placeholder=\"Phone\"\n                    validators={{\n                      required,\n                      minLength: minLength(10),\n                      maxLength: maxLength(15),\n                      isNumber\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Phone\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: \"Required\",\n                      minLength: \"Must be at least 10 characters\",\n                      MaxLength: \"Must be at 20 characters or less\",\n                      isNumber: \"Must be a number\"\n                    }}\n                  />\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"location\" md={2}>Location</Label>\n                <Col md={10}>\n                  <Control.select model=\".location\" id=\"location\" name=\"location\"\n                    className=\"form-control\"\n                    placeholder=\"location\"\n                    validators={{\n                      required\n                    }}\n\n                  > <option selected value=\"\">select a location</option>\n                    <option disabled hidden value=\"MadisonWest\">MadisonWest</option>\n                    <option value=\"Location7\">Location 7</option>\n                    <option disabled hidden value=\"Milwaukee\">Milwaukee</option>\n                  </Control.select>\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".location\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: \"Required\"\n                    }}\n                  />\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Col md={{ size: 10, offset: 2 }} />\n                <Button type=\"submit\" color=\"primary\">Submit</Button>\n              </Row>\n\n            </LocalForm>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  postCleaner: (cleanerId, fullname, phone, email, location) => postCleaner(cleanerId, fullname, phone, email, location)\n};\n\nexport default connect(null, mapDispatchToProps)(LocationSevenModal)","import React, { Component } from 'react';\nimport { Button, Label, Col, Row } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { postCleaner } from '../redux/ActionCreators';\nimport { baseUrl } from '../shared/baseUrl';\n\nimport { connect } from 'react-redux';\n\n//Illinois locations\n/*\nChicago,\nBloomington,\nNaperville,\nPeoria,\nRockford,\nSpringfield\n*/\n\n//recieves value and makes sure that value recieves true or false\nconst required = val => val && val.length;\n//wrap a function inside of a function (2 arrow functions)\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\n//checks to see if email begins with A-Z and checks for numbers\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n\n\nclass LocationEightModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isNavOpen: false,\n      isModalOpen: false,\n      fullname: '',\n      email: '',\n      phone: '',\n      location: '',\n      touched: {\n        fullname: false,\n        email: false,\n        phone: false\n      }\n    };\n    this.toggleNav = this.toggleNav.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n  }\n\n  toggleNav() {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen\n    });\n  }\n\n\n\n  handleSubmit(values) {\n    //alert(`id: ${this.props.cleanerId} name: ${values.fullname} phone: ${values.phone} email: ${values.email}`);\n    // console.log(baseUrl)\n\n    console.log(this.props.postCleaner);\n    this.props.postCleaner(this.props.cleanerId, values.fullname, values.phone, values.email, values.location);\n    alert(`Welcome to Carriage Town Cleaning and thanks for signing up!`);\n  }\n\n  render() {\n\n\n    console.log('bottom modal props: ', this.props);\n\n    return (\n      <React.Fragment>\n        <div className=\"row row-content\">\n\n          <div className=\"col-md-10\">\n            <LocalForm onSubmit={values => this.handleSubmit(values)}>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"fullname\" md={2}>Name</Label>\n                <Col md={10}>\n                  <Control.text model=\".fullname\" id=\"fullname\"\n                    name=\"fullname\"\n                    className=\"form-control\"\n                    placeholder=\"Name\"\n                    validators={{\n                      required,\n                      minLength: minLength(2),\n                      maxLength: maxLength(20),\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Name\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: 'Required',\n                      minLength: 'Must be at least 2 characters',\n                      maxLength: 'Must be 20 characters or less',\n                    }}\n                  />\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"email\" md={2}>Email</Label>\n                <Col md={10}>\n                  <Control.text model=\".email\" id=\"email\"\n                    name=\"email\"\n                    className=\"form-control\"\n                    placeholder=\"Email\"\n                    validators={{\n                      required,\n                      validEmail\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Email\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: 'Required',\n                      validEmail: 'Must be a valid email'\n                    }}\n                  />\n\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"phone\" md={2}>Phone</Label>\n                <Col md={10}>\n                  <Control.text model=\".phone\" id=\"phone\" name=\"phone\"\n                    className=\"form-control\"\n                    placeholder=\"Phone\"\n                    validators={{\n                      required,\n                      minLength: minLength(10),\n                      maxLength: maxLength(15),\n                      isNumber\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Phone\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: \"Required\",\n                      minLength: \"Must be at least 10 characters\",\n                      MaxLength: \"Must be at 20 characters or less\",\n                      isNumber: \"Must be a number\"\n                    }}\n                  />\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"location\" md={2}>Location</Label>\n                <Col md={10}>\n                  <Control.select model=\".location\" id=\"location\" name=\"location\"\n                    className=\"form-control\"\n                    placeholder=\"location\"\n                    validators={{\n                      required\n                    }}\n\n                  > <option selected value=\"\">select a location</option>\n                    <option disabled hidden value=\"MadisonWest\">MadisonWest</option>\n                    <option value=\"Location8\">Location 8</option>\n                    <option disabled hidden value=\"Milwaukee\">Milwaukee</option>\n                  </Control.select>\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".location\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: \"Required\"\n                    }}\n                  />\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Col md={{ size: 10, offset: 2 }} />\n                <Button type=\"submit\" color=\"primary\">Submit</Button>\n              </Row>\n\n            </LocalForm>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  postCleaner: (cleanerId, fullname, phone, email, location) => postCleaner(cleanerId, fullname, phone, email, location)\n};\n\nexport default connect(null, mapDispatchToProps)(LocationEightModal)","import React, { Component } from 'react';\nimport { Button, Label, Col, Row } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { postCleaner } from '../redux/ActionCreators';\nimport { baseUrl } from '../shared/baseUrl';\n\nimport { connect } from 'react-redux';\n\n//Illinois locations\n/*\nChicago,\nBloomington,\nNaperville,\nPeoria,\nRockford,\nSpringfield\n*/\n\n//recieves value and makes sure that value recieves true or false\nconst required = val => val && val.length;\n//wrap a function inside of a function (2 arrow functions)\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\n//checks to see if email begins with A-Z and checks for numbers\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n\n\nclass LocationNineModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isNavOpen: false,\n      isModalOpen: false,\n      fullname: '',\n      email: '',\n      phone: '',\n      location: '',\n      touched: {\n        fullname: false,\n        email: false,\n        phone: false\n      }\n    };\n    this.toggleNav = this.toggleNav.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n  }\n\n  toggleNav() {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen\n    });\n  }\n\n\n\n  handleSubmit(values) {\n    //alert(`id: ${this.props.cleanerId} name: ${values.fullname} phone: ${values.phone} email: ${values.email}`);\n    // console.log(baseUrl)\n\n    console.log(this.props.postCleaner);\n    this.props.postCleaner(this.props.cleanerId, values.fullname, values.phone, values.email, values.location);\n    alert(`Welcome to Carriage Town Cleaning and thanks for signing up!`);\n  }\n\n  render() {\n\n\n    console.log('bottom modal props: ', this.props);\n\n    return (\n      <React.Fragment>\n        <div className=\"row row-content\">\n\n          <div className=\"col-md-10\">\n            <LocalForm onSubmit={values => this.handleSubmit(values)}>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"fullname\" md={2}>Name</Label>\n                <Col md={10}>\n                  <Control.text model=\".fullname\" id=\"fullname\"\n                    name=\"fullname\"\n                    className=\"form-control\"\n                    placeholder=\"Name\"\n                    validators={{\n                      required,\n                      minLength: minLength(2),\n                      maxLength: maxLength(20),\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Name\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: 'Required',\n                      minLength: 'Must be at least 2 characters',\n                      maxLength: 'Must be 20 characters or less',\n                    }}\n                  />\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"email\" md={2}>Email</Label>\n                <Col md={10}>\n                  <Control.text model=\".email\" id=\"email\"\n                    name=\"email\"\n                    className=\"form-control\"\n                    placeholder=\"Email\"\n                    validators={{\n                      required,\n                      validEmail\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Email\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: 'Required',\n                      validEmail: 'Must be a valid email'\n                    }}\n                  />\n\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"phone\" md={2}>Phone</Label>\n                <Col md={10}>\n                  <Control.text model=\".phone\" id=\"phone\" name=\"phone\"\n                    className=\"form-control\"\n                    placeholder=\"Phone\"\n                    validators={{\n                      required,\n                      minLength: minLength(10),\n                      maxLength: maxLength(15),\n                      isNumber\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Phone\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: \"Required\",\n                      minLength: \"Must be at least 10 characters\",\n                      MaxLength: \"Must be at 20 characters or less\",\n                      isNumber: \"Must be a number\"\n                    }}\n                  />\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"location\" md={2}>Location</Label>\n                <Col md={10}>\n                  <Control.select model=\".location\" id=\"location\" name=\"location\"\n                    className=\"form-control\"\n                    placeholder=\"location\"\n                    validators={{\n                      required\n                    }}\n\n                  > <option selected value=\"\">select a location</option>\n                    <option disabled hidden value=\"MadisonWest\">MadisonWest</option>\n                    <option value=\"Location9\">Location 9</option>\n                    <option disabled hidden value=\"Milwaukee\">Milwaukee</option>\n                  </Control.select>\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".location\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: \"Required\"\n                    }}\n                  />\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Col md={{ size: 10, offset: 2 }} />\n                <Button type=\"submit\" color=\"primary\">Submit</Button>\n              </Row>\n\n            </LocalForm>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  postCleaner: (cleanerId, fullname, phone, email, location) => postCleaner(cleanerId, fullname, phone, email, location)\n};\n\nexport default connect(null, mapDispatchToProps)(LocationNineModal)","import React, { Component } from 'react';\nimport { Button, Label, Col, Row } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { postCleaner } from '../redux/ActionCreators';\nimport { baseUrl } from '../shared/baseUrl';\n\nimport { connect } from 'react-redux';\n\n//Illinois locations\n/*\nChicago,\nBloomington,\nNaperville,\nPeoria,\nRockford,\nSpringfield\n*/\n\n//recieves value and makes sure that value recieves true or false\nconst required = val => val && val.length;\n//wrap a function inside of a function (2 arrow functions)\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\n//checks to see if email begins with A-Z and checks for numbers\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n\n\nclass LocationTenModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isNavOpen: false,\n      isModalOpen: false,\n      fullname: '',\n      email: '',\n      phone: '',\n      location: '',\n      touched: {\n        fullname: false,\n        email: false,\n        phone: false\n      }\n    };\n    this.toggleNav = this.toggleNav.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n  }\n\n  toggleNav() {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen\n    });\n  }\n\n\n\n  handleSubmit(values) {\n    //alert(`id: ${this.props.cleanerId} name: ${values.fullname} phone: ${values.phone} email: ${values.email}`);\n    // console.log(baseUrl)\n\n    console.log(this.props.postCleaner);\n    this.props.postCleaner(this.props.cleanerId, values.fullname, values.phone, values.email, values.location);\n    alert(`Welcome to Carriage Town Cleaning and thanks for signing up!`);\n  }\n\n  render() {\n\n\n    console.log('bottom modal props: ', this.props);\n\n    return (\n      <React.Fragment>\n        <div className=\"row row-content\">\n\n          <div className=\"col-md-10\">\n            <LocalForm onSubmit={values => this.handleSubmit(values)}>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"fullname\" md={2}>Name</Label>\n                <Col md={10}>\n                  <Control.text model=\".fullname\" id=\"fullname\"\n                    name=\"fullname\"\n                    className=\"form-control\"\n                    placeholder=\"Name\"\n                    validators={{\n                      required,\n                      minLength: minLength(2),\n                      maxLength: maxLength(20),\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Name\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: 'Required',\n                      minLength: 'Must be at least 2 characters',\n                      maxLength: 'Must be 20 characters or less',\n                    }}\n                  />\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"email\" md={2}>Email</Label>\n                <Col md={10}>\n                  <Control.text model=\".email\" id=\"email\"\n                    name=\"email\"\n                    className=\"form-control\"\n                    placeholder=\"Email\"\n                    validators={{\n                      required,\n                      validEmail\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Email\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: 'Required',\n                      validEmail: 'Must be a valid email'\n                    }}\n                  />\n\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"phone\" md={2}>Phone</Label>\n                <Col md={10}>\n                  <Control.text model=\".phone\" id=\"phone\" name=\"phone\"\n                    className=\"form-control\"\n                    placeholder=\"Phone\"\n                    validators={{\n                      required,\n                      minLength: minLength(10),\n                      maxLength: maxLength(15),\n                      isNumber\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Phone\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: \"Required\",\n                      minLength: \"Must be at least 10 characters\",\n                      MaxLength: \"Must be at 20 characters or less\",\n                      isNumber: \"Must be a number\"\n                    }}\n                  />\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"location\" md={2}>Location</Label>\n                <Col md={10}>\n                  <Control.select model=\".location\" id=\"location\" name=\"location\"\n                    className=\"form-control\"\n                    placeholder=\"location\"\n                    validators={{\n                      required\n                    }}\n\n                  > <option selected value=\"\">select a location</option>\n                    <option disabled hidden value=\"MadisonWest\">MadisonWest</option>\n                    <option value=\"Location10\">Location 10</option>\n                    <option disabled hidden value=\"Milwaukee\">Milwaukee</option>\n                  </Control.select>\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".location\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: \"Required\"\n                    }}\n                  />\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Col md={{ size: 10, offset: 2 }} />\n                <Button type=\"submit\" color=\"primary\">Submit</Button>\n              </Row>\n\n            </LocalForm>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  postCleaner: (cleanerId, fullname, phone, email, location) => postCleaner(cleanerId, fullname, phone, email, location)\n};\n\nexport default connect(null, mapDispatchToProps)(LocationTenModal)","import React, { Component } from 'react';\nimport { Button, Label, Col, Row } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { postCleaner } from '../redux/ActionCreators';\nimport { baseUrl } from '../shared/baseUrl';\n\nimport { connect } from 'react-redux';\n\n//Illinois locations\n/*\nChicago,\nBloomington,\nNaperville,\nPeoria,\nRockford,\nSpringfield\n*/\n\n//recieves value and makes sure that value recieves true or false\nconst required = val => val && val.length;\n//wrap a function inside of a function (2 arrow functions)\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\n//checks to see if email begins with A-Z and checks for numbers\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n\n\nclass LocationElevenModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isNavOpen: false,\n      isModalOpen: false,\n      fullname: '',\n      email: '',\n      phone: '',\n      location: '',\n      touched: {\n        fullname: false,\n        email: false,\n        phone: false\n      }\n    };\n    this.toggleNav = this.toggleNav.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n  }\n\n  toggleNav() {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen\n    });\n  }\n\n\n\n  handleSubmit(values) {\n    //alert(`id: ${this.props.cleanerId} name: ${values.fullname} phone: ${values.phone} email: ${values.email}`);\n    // console.log(baseUrl)\n\n    console.log(this.props.postCleaner);\n    this.props.postCleaner(this.props.cleanerId, values.fullname, values.phone, values.email, values.location);\n    alert(`Welcome to Carriage Town Cleaning and thanks for signing up!`);\n  }\n\n  render() {\n\n\n    console.log('bottom modal props: ', this.props);\n\n    return (\n      <React.Fragment>\n        <div className=\"row row-content\">\n\n          <div className=\"col-md-10\">\n            <LocalForm onSubmit={values => this.handleSubmit(values)}>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"fullname\" md={2}>Name</Label>\n                <Col md={10}>\n                  <Control.text model=\".fullname\" id=\"fullname\"\n                    name=\"fullname\"\n                    className=\"form-control\"\n                    placeholder=\"Name\"\n                    validators={{\n                      required,\n                      minLength: minLength(2),\n                      maxLength: maxLength(20),\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Name\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: 'Required',\n                      minLength: 'Must be at least 2 characters',\n                      maxLength: 'Must be 20 characters or less',\n                    }}\n                  />\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"email\" md={2}>Email</Label>\n                <Col md={10}>\n                  <Control.text model=\".email\" id=\"email\"\n                    name=\"email\"\n                    className=\"form-control\"\n                    placeholder=\"Email\"\n                    validators={{\n                      required,\n                      validEmail\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Email\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: 'Required',\n                      validEmail: 'Must be a valid email'\n                    }}\n                  />\n\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"phone\" md={2}>Phone</Label>\n                <Col md={10}>\n                  <Control.text model=\".phone\" id=\"phone\" name=\"phone\"\n                    className=\"form-control\"\n                    placeholder=\"Phone\"\n                    validators={{\n                      required,\n                      minLength: minLength(10),\n                      maxLength: maxLength(15),\n                      isNumber\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Phone\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: \"Required\",\n                      minLength: \"Must be at least 10 characters\",\n                      MaxLength: \"Must be at 20 characters or less\",\n                      isNumber: \"Must be a number\"\n                    }}\n                  />\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"location\" md={2}>Location</Label>\n                <Col md={10}>\n                  <Control.select model=\".location\" id=\"location\" name=\"location\"\n                    className=\"form-control\"\n                    placeholder=\"location\"\n                    validators={{\n                      required\n                    }}\n\n                  > <option selected value=\"\">select a location</option>\n                    <option disabled hidden value=\"MadisonWest\">MadisonWest</option>\n                    <option value=\"Location11\">Location 11</option>\n                    <option disabled hidden value=\"Milwaukee\">Milwaukee</option>\n                  </Control.select>\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".location\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: \"Required\"\n                    }}\n                  />\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Col md={{ size: 10, offset: 2 }} />\n                <Button type=\"submit\" color=\"primary\">Submit</Button>\n              </Row>\n\n            </LocalForm>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  postCleaner: (cleanerId, fullname, phone, email, location) => postCleaner(cleanerId, fullname, phone, email, location)\n};\n\nexport default connect(null, mapDispatchToProps)(LocationElevenModal)","import React, { Component } from 'react';\nimport { Button, Label, Col, Row } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { postCleaner } from '../redux/ActionCreators';\nimport { baseUrl } from '../shared/baseUrl';\n\nimport { connect } from 'react-redux';\n\n//Illinois locations\n/*\nChicago,\nBloomington,\nNaperville,\nPeoria,\nRockford,\nSpringfield\n*/\n\n//recieves value and makes sure that value recieves true or false\nconst required = val => val && val.length;\n//wrap a function inside of a function (2 arrow functions)\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\n//checks to see if email begins with A-Z and checks for numbers\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n\n\nclass LocationTwelveModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isNavOpen: false,\n      isModalOpen: false,\n      fullname: '',\n      email: '',\n      phone: '',\n      location: '',\n      touched: {\n        fullname: false,\n        email: false,\n        phone: false\n      }\n    };\n    this.toggleNav = this.toggleNav.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n  }\n\n  toggleNav() {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen\n    });\n  }\n\n\n\n  handleSubmit(values) {\n    //alert(`id: ${this.props.cleanerId} name: ${values.fullname} phone: ${values.phone} email: ${values.email}`);\n    // console.log(baseUrl)\n\n    console.log(this.props.postCleaner);\n    this.props.postCleaner(this.props.cleanerId, values.fullname, values.phone, values.email, values.location);\n    alert(`Welcome to Carriage Town Cleaning and thanks for signing up!`);\n  }\n\n  render() {\n\n\n    console.log('bottom modal props: ', this.props);\n\n    return (\n      <React.Fragment>\n        <div className=\"row row-content\">\n\n          <div className=\"col-md-10\">\n            <LocalForm onSubmit={values => this.handleSubmit(values)}>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"fullname\" md={2}>Name</Label>\n                <Col md={10}>\n                  <Control.text model=\".fullname\" id=\"fullname\"\n                    name=\"fullname\"\n                    className=\"form-control\"\n                    placeholder=\"Name\"\n                    validators={{\n                      required,\n                      minLength: minLength(2),\n                      maxLength: maxLength(20),\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Name\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: 'Required',\n                      minLength: 'Must be at least 2 characters',\n                      maxLength: 'Must be 20 characters or less',\n                    }}\n                  />\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"email\" md={2}>Email</Label>\n                <Col md={10}>\n                  <Control.text model=\".email\" id=\"email\"\n                    name=\"email\"\n                    className=\"form-control\"\n                    placeholder=\"Email\"\n                    validators={{\n                      required,\n                      validEmail\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Email\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: 'Required',\n                      validEmail: 'Must be a valid email'\n                    }}\n                  />\n\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"phone\" md={2}>Phone</Label>\n                <Col md={10}>\n                  <Control.text model=\".phone\" id=\"phone\" name=\"phone\"\n                    className=\"form-control\"\n                    placeholder=\"Phone\"\n                    validators={{\n                      required,\n                      minLength: minLength(10),\n                      maxLength: maxLength(15),\n                      isNumber\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Phone\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: \"Required\",\n                      minLength: \"Must be at least 10 characters\",\n                      MaxLength: \"Must be at 20 characters or less\",\n                      isNumber: \"Must be a number\"\n                    }}\n                  />\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"location\" md={2}>Location</Label>\n                <Col md={10}>\n                  <Control.select model=\".location\" id=\"location\" name=\"location\"\n                    className=\"form-control\"\n                    placeholder=\"location\"\n                    validators={{\n                      required\n                    }}\n\n                  > <option selected value=\"\">select a location</option>\n                    <option disabled hidden value=\"MadisonWest\">MadisonWest</option>\n                    <option value=\"Location12\">Location 12</option>\n                    <option disabled hidden value=\"Milwaukee\">Milwaukee</option>\n                  </Control.select>\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".location\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: \"Required\"\n                    }}\n                  />\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Col md={{ size: 10, offset: 2 }} />\n                <Button type=\"submit\" color=\"primary\">Submit</Button>\n              </Row>\n\n            </LocalForm>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  postCleaner: (cleanerId, fullname, phone, email, location) => postCleaner(cleanerId, fullname, phone, email, location)\n};\n\nexport default connect(null, mapDispatchToProps)(LocationTwelveModal)","//THIS ALLOWS ONE TO BE ABLE TO DISPLAY INFO AFTER CLICK ON BUTTON\n\nimport React, { Component } from 'react';\nimport { Navbar, NavbarBrand, Jumbotron, NavbarToggler, Collapse, NavItem, Nav, Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { Route, Switch, Link, NavLink } from 'react-router-dom';\nimport Home from './Home';\nimport TopModal from './TopModal';\nimport LocationSevenModal from './LocationSevenModal';\nimport LocationEightModal from './LocationEightModal';\nimport LocationNineModal from './LocationNineModal';\nimport LocationTenModal from './LocationTenModal';\nimport LocationElevenModal from './LocationElevenModal';\nimport LocationTwelveModal from './LocationTwelveModal';\n\nclass States2 extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isModalOpen: false,\n            isModalOpen2: false,\n            isModalOpen3: false,\n            isModalOpen4: false,\n            isModalOpen5: false,\n            isModalOpen6: false\n        };\n\n        this.toggleModal = this.toggleModal.bind(this);\n        this.toggleModal2 = this.toggleModal2.bind(this);\n        this.toggleModal3 = this.toggleModal3.bind(this);\n        this.toggleModal4 = this.toggleModal4.bind(this);\n        this.toggleModal5 = this.toggleModal5.bind(this);\n        this.toggleModal6 = this.toggleModal6.bind(this);\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    toggleModal2() {\n        this.setState({\n            isModalOpen2: !this.state.isModalOpen2\n        });\n    }\n\n    toggleModal3() {\n        this.setState({\n            isModalOpen3: !this.state.isModalOpen3\n        });\n    }\n\n    toggleModal4() {\n        this.setState({\n            isModalOpen4: !this.state.isModalOpen4\n        });\n    }\n\n    toggleModal5() {\n        this.setState({\n            isModalOpen5: !this.state.isModalOpen5\n        });\n    }\n\n    toggleModal6() {\n        this.setState({\n            isModalOpen6: !this.state.isModalOpen6\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"container\">\n                    <div class=\"row mx-auto mb-5 mt-3\">\n                        <div class=\"col-sm-12 col-lg New2\">\n                            <h1>Our Locations</h1>\n                        </div>\n                    </div>\n\n                    <div class=\"row mb-5 mt-4\">\n                        <div class=\"card col-sm-12 col-md-5 col-offset-md-1\">\n                            <img class=\"card-img-top Background\" alt=\"Card 2\" src=\"images/favicon.png\" />\n                            <div class=\"card-body\">\n                                <h2 class=\"New\">Location 7ish</h2>\n                                <p class=\"card-text\">Text here that describes the site itself. Add a photo of someone inside of the company who works at Carraige Town Cleaning and Disinfectants</p>\n                            </div>\n                            <Button onClick={this.toggleModal}>\n                                <p className=\"ModalButton\">Interested?</p>\n                            </Button>\n\n                        </div>\n\n                        <div class=\"card col-sm-12 col-md-5 col-offset-md-1\">\n                            <img class=\"card-img-top Background\" alt=\"Card \" src=\"images/favicon.png\" />\n                            <div class=\"card-body\">\n                                <h2 class=\"New\">Location 8</h2>\n                                <p class=\"card-text\">Text here that describes the site itself. Add a photo of someone inside of the company who works at Carraige Town Cleaning and Disinfectants</p>\n                            </div>\n                            <Button onClick={this.toggleModal2}>\n                                <p className=\"ModalButton\">Interested?</p>\n                            </Button>\n\n                        </div>\n                    </div>\n\n                    <div class=\"row mb-5 mt-4\">\n                        <div class=\"card col-sm-12 col-md-5 col-offset-md-1\">\n                            <img class=\"card-img-top Background\" alt=\"Card \" src=\"images/favicon.png\" />\n                            <div class=\"card-body\">\n                                <h2 class=\"New\">Location 9</h2>\n                                <p class=\"card-text\">Text here that describes the site itself. Add a photo of someone inside of the company who works at Carraige Town Cleaning and Disinfectants</p>\n                            </div>\n                            <Button onClick={this.toggleModal3}>\n                                <p className=\"ModalButton\">Interested?</p>\n                            </Button>\n\n                        </div>\n\n                        <div class=\"card col-sm-12 col-md-5 col-offset-md-1\">\n                            <img class=\"card-img-top Background\" alt=\"Card \" src=\"images/favicon.png\" />\n                            <div class=\"card-body\">\n                                <h2 class=\"New\">Location 10</h2>\n                                <p class=\"card-text\">Text here that describes the site itself. Add a photo of someone inside of the company who works at Carraige Town Cleaning and Disinfectants</p>\n                            </div>\n                            <Button onClick={this.toggleModal4}>\n                                <p className=\"ModalButton\">Interested?</p>\n                            </Button>\n\n                        </div>\n                    </div>\n\n                    <div class=\"row mb-5 mt-4\">\n                        <div class=\"card col-sm-12 col-md-5 col-offset-md-1\">\n                            <img class=\"card-img-top Background\" alt=\"Card \" src=\"images/favicon.png\" />\n                            <div class=\"card-body\">\n                                <h2 class=\"New\">Location 11</h2>\n                                <p class=\"card-text\">Text here that describes the site itself. Add a photo of someone inside of the company who works at Carraige Town Cleaning and Disinfectants</p>\n                            </div>\n                            <Button onClick={this.toggleModal5}>\n                                <p className=\"ModalButton\">Interested?</p>\n                            </Button>\n\n                        </div>\n\n                        <div class=\"card col-sm-12 col-md-5 col-offset-md-1\">\n                            <img class=\"card-img-top Background\" alt=\"Card \" src=\"images/favicon.png\" />\n                            <div class=\"card-body\">\n                                <h2 class=\"New\">Location 12</h2>\n                                <p class=\"card-text\">Text here that describes the site itself. Add a photo of someone inside of the company who works at Carraige Town Cleaning and Disinfectants</p>\n                            </div>\n                            <Button onClick={this.toggleModal6}>\n                                <p className=\"ModalButton\">Interested?</p>\n                            </Button>\n\n                        </div>\n                    </div>\n\n\n                </div>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>\n                        <TopModal />\n                    </ModalHeader>\n                    <ModalBody>\n                        <LocationSevenModal />\n                    </ModalBody>\n\n                </Modal>\n\n                <Modal isOpen={this.state.isModalOpen2} toggle={this.toggleModal2}>\n                    <ModalHeader toggle={this.toggleModal2}>\n                        <TopModal />\n                    </ModalHeader>\n                    <ModalBody>\n                        <LocationEightModal />\n                    </ModalBody>\n\n                </Modal>\n\n                <Modal isOpen={this.state.isModalOpen3} toggle={this.toggleModal3}>\n                    <ModalHeader toggle={this.toggleModal3}>\n                        <TopModal />\n                    </ModalHeader>\n                    <ModalBody>\n                        <LocationNineModal />\n                    </ModalBody>\n\n                </Modal>\n\n                <Modal isOpen={this.state.isModalOpen4} toggle={this.toggleModal4}>\n                    <ModalHeader toggle={this.toggleModal4}>\n                        <TopModal />\n                    </ModalHeader>\n                    <ModalBody>\n                        <LocationTenModal />\n                    </ModalBody>\n\n                </Modal>\n\n                <Modal isOpen={this.state.isModalOpen5} toggle={this.toggleModal5}>\n                    <ModalHeader toggle={this.toggleModal5}>\n                        <TopModal />\n                    </ModalHeader>\n                    <ModalBody>\n                        <LocationElevenModal />\n                    </ModalBody>\n\n                </Modal>\n\n                <Modal isOpen={this.state.isModalOpen6} toggle={this.toggleModal6}>\n                    <ModalHeader toggle={this.toggleModal6}>\n                        <TopModal />\n                    </ModalHeader>\n                    <ModalBody>\n                        <LocationTwelveModal />\n                    </ModalBody>\n\n                </Modal>\n\n            </React.Fragment>\n        )\n    }\n}\n\nexport default States2;\n\n\n\n","import React, { Component } from 'react';\nimport { Button, Label, Col, Row } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { postCleaner } from '../redux/ActionCreators';\nimport { baseUrl } from '../shared/baseUrl';\n\nimport { connect } from 'react-redux';\n\n//Wiscoinsin locations \n/*\nAppleton,\nEauClaire,\nGreenBay,\nMadisonEast,\nMadisonWest,\nMilwaukee\n*/\n\n//recieves value and makes sure that value recieves true or false\nconst required = val => val && val.length;\n//wrap a function inside of a function (2 arrow functions)\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\n//checks to see if email begins with A-Z and checks for numbers\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n\n\nclass LocationThirteenModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isNavOpen: false,\n      isModalOpen: false,\n      fullname: '',\n      email: '',\n      phone: '',\n      location: '',\n      touched: {\n        fullname: false,\n        email: false,\n        phone: false\n      }\n    };\n    this.toggleNav = this.toggleNav.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n  }\n\n  toggleNav() {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen\n    });\n  }\n\n\n\n  handleSubmit(values) {\n    //alert(`id: ${this.props.cleanerId} name: ${values.fullname} phone: ${values.phone} email: ${values.email}`);\n    // console.log(baseUrl)\n\n    console.log(this.props.postCleaner);\n    this.props.postCleaner(this.props.cleanerId, values.fullname, values.phone, values.email, values.location);\n    alert(`Welcome to Carriage Town Cleaning and thanks for signing up!`);\n  }\n\n  render() {\n\n\n    console.log('bottom modal props: ', this.props);\n\n    return (\n      <React.Fragment>\n        <div className=\"row row-content\">\n\n          <div className=\"col-md-10\">\n            <LocalForm onSubmit={values => this.handleSubmit(values)}>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"fullname\" md={2}>Name</Label>\n                <Col md={10}>\n                  <Control.text model=\".fullname\" id=\"fullname\"\n                    name=\"fullname\"\n                    className=\"form-control\"\n                    placeholder=\"Name\"\n                    validators={{\n                      required,\n                      minLength: minLength(2),\n                      maxLength: maxLength(20),\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Name\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: 'Required',\n                      minLength: 'Must be at least 2 characters',\n                      maxLength: 'Must be 20 characters or less',\n                    }}\n                  />\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"email\" md={2}>Email</Label>\n                <Col md={10}>\n                  <Control.text model=\".email\" id=\"email\"\n                    name=\"email\"\n                    className=\"form-control\"\n                    placeholder=\"Email\"\n                    validators={{\n                      required,\n                      validEmail\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Email\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: 'Required',\n                      validEmail: 'Must be a valid email'\n                    }}\n                  />\n\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"phone\" md={2}>Phone</Label>\n                <Col md={10}>\n                  <Control.text model=\".phone\" id=\"phone\" name=\"phone\"\n                    className=\"form-control\"\n                    placeholder=\"Phone\"\n                    validators={{\n                      required,\n                      minLength: minLength(10),\n                      maxLength: maxLength(15),\n                      isNumber\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Phone\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: \"Required\",\n                      minLength: \"Must be at least 10 characters\",\n                      MaxLength: \"Must be at 20 characters or less\",\n                      isNumber: \"Must be a number\"\n                    }}\n                  />\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"location\" md={2}>Location</Label>\n                <Col md={10}>\n                  <Control.select model=\".location\" id=\"location\" name=\"location\"\n                    className=\"form-control\"\n                    placeholder=\"location\"\n                    validators={{\n                      required\n                    }}\n\n                  > <option selected value=\"\">select a location</option>\n                    <option disabled hidden value=\"MadisonWest\">MadisonWest</option>\n                    <option value=\"Location13\">Location 13</option>\n                    <option disabled hidden value=\"Milwaukee\">Milwaukee</option>\n                  </Control.select>\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".location\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: \"Required\"\n                    }}\n                  />\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Col md={{ size: 10, offset: 2 }} />\n                <Button type=\"submit\" color=\"primary\">Submit</Button>\n              </Row>\n\n            </LocalForm>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  postCleaner: (cleanerId, fullname, phone, email, location) => postCleaner(cleanerId, fullname, phone, email, location)\n};\n\nexport default connect(null, mapDispatchToProps)(LocationThirteenModal)","import React, { Component } from 'react';\nimport { Button, Label, Col, Row } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { postCleaner } from '../redux/ActionCreators';\nimport { baseUrl } from '../shared/baseUrl';\n\nimport { connect } from 'react-redux';\n\n//Wiscoinsin locations \n/*\nAppleton,\nEauClaire,\nGreenBay,\nMadisonEast,\nMadisonWest,\nMilwaukee\n*/\n\n//recieves value and makes sure that value recieves true or false\nconst required = val => val && val.length;\n//wrap a function inside of a function (2 arrow functions)\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\n//checks to see if email begins with A-Z and checks for numbers\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n\n\nclass LocationFourteenModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isNavOpen: false,\n      isModalOpen: false,\n      fullname: '',\n      email: '',\n      phone: '',\n      location: '',\n      touched: {\n        fullname: false,\n        email: false,\n        phone: false\n      }\n    };\n    this.toggleNav = this.toggleNav.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n  }\n\n  toggleNav() {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen\n    });\n  }\n\n\n\n  handleSubmit(values) {\n    //alert(`id: ${this.props.cleanerId} name: ${values.fullname} phone: ${values.phone} email: ${values.email}`);\n    // console.log(baseUrl)\n\n    console.log(this.props.postCleaner);\n    this.props.postCleaner(this.props.cleanerId, values.fullname, values.phone, values.email, values.location);\n    alert(`Welcome to Carriage Town Cleaning and thanks for signing up!`);\n  }\n\n  render() {\n\n\n    console.log('bottom modal props: ', this.props);\n\n    return (\n      <React.Fragment>\n        <div className=\"row row-content\">\n\n          <div className=\"col-md-10\">\n            <LocalForm onSubmit={values => this.handleSubmit(values)}>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"fullname\" md={2}>Name</Label>\n                <Col md={10}>\n                  <Control.text model=\".fullname\" id=\"fullname\"\n                    name=\"fullname\"\n                    className=\"form-control\"\n                    placeholder=\"Name\"\n                    validators={{\n                      required,\n                      minLength: minLength(2),\n                      maxLength: maxLength(20),\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Name\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: 'Required',\n                      minLength: 'Must be at least 2 characters',\n                      maxLength: 'Must be 20 characters or less',\n                    }}\n                  />\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"email\" md={2}>Email</Label>\n                <Col md={10}>\n                  <Control.text model=\".email\" id=\"email\"\n                    name=\"email\"\n                    className=\"form-control\"\n                    placeholder=\"Email\"\n                    validators={{\n                      required,\n                      validEmail\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Email\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: 'Required',\n                      validEmail: 'Must be a valid email'\n                    }}\n                  />\n\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"phone\" md={2}>Phone</Label>\n                <Col md={10}>\n                  <Control.text model=\".phone\" id=\"phone\" name=\"phone\"\n                    className=\"form-control\"\n                    placeholder=\"Phone\"\n                    validators={{\n                      required,\n                      minLength: minLength(10),\n                      maxLength: maxLength(15),\n                      isNumber\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Phone\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: \"Required\",\n                      minLength: \"Must be at least 10 characters\",\n                      MaxLength: \"Must be at 20 characters or less\",\n                      isNumber: \"Must be a number\"\n                    }}\n                  />\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"location\" md={2}>Location</Label>\n                <Col md={10}>\n                  <Control.select model=\".location\" id=\"location\" name=\"location\"\n                    className=\"form-control\"\n                    placeholder=\"location\"\n                    validators={{\n                      required\n                    }}\n\n                  > <option selected value=\"\">select a location</option>\n                    <option disabled hidden value=\"MadisonWest\">MadisonWest</option>\n                    <option value=\"Location14\">Location 14</option>\n                    <option disabled hidden value=\"Milwaukee\">Milwaukee</option>\n                  </Control.select>\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".location\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: \"Required\"\n                    }}\n                  />\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Col md={{ size: 10, offset: 2 }} />\n                <Button type=\"submit\" color=\"primary\">Submit</Button>\n              </Row>\n\n            </LocalForm>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  postCleaner: (cleanerId, fullname, phone, email, location) => postCleaner(cleanerId, fullname, phone, email, location)\n};\n\nexport default connect(null, mapDispatchToProps)(LocationFourteenModal)","import React, { Component } from 'react';\nimport { Button, Label, Col, Row } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { postCleaner } from '../redux/ActionCreators';\nimport { baseUrl } from '../shared/baseUrl';\n\nimport { connect } from 'react-redux';\n\n//Wiscoinsin locations \n/*\nAppleton,\nEauClaire,\nGreenBay,\nMadisonEast,\nMadisonWest,\nMilwaukee\n*/\n\n//recieves value and makes sure that value recieves true or false\nconst required = val => val && val.length;\n//wrap a function inside of a function (2 arrow functions)\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\n//checks to see if email begins with A-Z and checks for numbers\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n\n\nclass LocationFifteenModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isNavOpen: false,\n      isModalOpen: false,\n      fullname: '',\n      email: '',\n      phone: '',\n      location: '',\n      touched: {\n        fullname: false,\n        email: false,\n        phone: false\n      }\n    };\n    this.toggleNav = this.toggleNav.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n  }\n\n  toggleNav() {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen\n    });\n  }\n\n\n\n  handleSubmit(values) {\n    //alert(`id: ${this.props.cleanerId} name: ${values.fullname} phone: ${values.phone} email: ${values.email}`);\n    // console.log(baseUrl)\n\n    console.log(this.props.postCleaner);\n    this.props.postCleaner(this.props.cleanerId, values.fullname, values.phone, values.email, values.location);\n    alert(`Welcome to Carriage Town Cleaning and thanks for signing up!`);\n  }\n\n  render() {\n\n\n    console.log('bottom modal props: ', this.props);\n\n    return (\n      <React.Fragment>\n        <div className=\"row row-content\">\n\n          <div className=\"col-md-10\">\n            <LocalForm onSubmit={values => this.handleSubmit(values)}>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"fullname\" md={2}>Name</Label>\n                <Col md={10}>\n                  <Control.text model=\".fullname\" id=\"fullname\"\n                    name=\"fullname\"\n                    className=\"form-control\"\n                    placeholder=\"Name\"\n                    validators={{\n                      required,\n                      minLength: minLength(2),\n                      maxLength: maxLength(20),\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Name\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: 'Required',\n                      minLength: 'Must be at least 2 characters',\n                      maxLength: 'Must be 20 characters or less',\n                    }}\n                  />\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"email\" md={2}>Email</Label>\n                <Col md={10}>\n                  <Control.text model=\".email\" id=\"email\"\n                    name=\"email\"\n                    className=\"form-control\"\n                    placeholder=\"Email\"\n                    validators={{\n                      required,\n                      validEmail\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Email\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: 'Required',\n                      validEmail: 'Must be a valid email'\n                    }}\n                  />\n\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"phone\" md={2}>Phone</Label>\n                <Col md={10}>\n                  <Control.text model=\".phone\" id=\"phone\" name=\"phone\"\n                    className=\"form-control\"\n                    placeholder=\"Phone\"\n                    validators={{\n                      required,\n                      minLength: minLength(10),\n                      maxLength: maxLength(15),\n                      isNumber\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Phone\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: \"Required\",\n                      minLength: \"Must be at least 10 characters\",\n                      MaxLength: \"Must be at 20 characters or less\",\n                      isNumber: \"Must be a number\"\n                    }}\n                  />\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"location\" md={2}>Location</Label>\n                <Col md={10}>\n                  <Control.select model=\".location\" id=\"location\" name=\"location\"\n                    className=\"form-control\"\n                    placeholder=\"location\"\n                    validators={{\n                      required\n                    }}\n\n                  > <option selected value=\"\">select a location</option>\n                    <option disabled hidden value=\"MadisonWest\">MadisonWest</option>\n                    <option value=\"Location15\">Location 15</option>\n                    <option disabled hidden value=\"Milwaukee\">Milwaukee</option>\n                  </Control.select>\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".location\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: \"Required\"\n                    }}\n                  />\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Col md={{ size: 10, offset: 2 }} />\n                <Button type=\"submit\" color=\"primary\">Submit</Button>\n              </Row>\n\n            </LocalForm>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  postCleaner: (cleanerId, fullname, phone, email, location) => postCleaner(cleanerId, fullname, phone, email, location)\n};\n\nexport default connect(null, mapDispatchToProps)(LocationFifteenModal)","import React, { Component } from 'react';\nimport { Button, Label, Col, Row } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { postCleaner } from '../redux/ActionCreators';\nimport { baseUrl } from '../shared/baseUrl';\n\nimport { connect } from 'react-redux';\n\n//Wiscoinsin locations \n/*\nAppleton,\nEauClaire,\nGreenBay,\nMadisonEast,\nMadisonWest,\nMilwaukee\n*/\n\n//recieves value and makes sure that value recieves true or false\nconst required = val => val && val.length;\n//wrap a function inside of a function (2 arrow functions)\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\n//checks to see if email begins with A-Z and checks for numbers\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n\n\nclass LocationSixteenModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isNavOpen: false,\n      isModalOpen: false,\n      fullname: '',\n      email: '',\n      phone: '',\n      location: '',\n      touched: {\n        fullname: false,\n        email: false,\n        phone: false\n      }\n    };\n    this.toggleNav = this.toggleNav.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n  }\n\n  toggleNav() {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen\n    });\n  }\n\n\n\n  handleSubmit(values) {\n    //alert(`id: ${this.props.cleanerId} name: ${values.fullname} phone: ${values.phone} email: ${values.email}`);\n    // console.log(baseUrl)\n\n    console.log(this.props.postCleaner);\n    this.props.postCleaner(this.props.cleanerId, values.fullname, values.phone, values.email, values.location);\n    alert(`Welcome to Carriage Town Cleaning and thanks for signing up!`);\n  }\n\n  render() {\n\n\n    console.log('bottom modal props: ', this.props);\n\n    return (\n      <React.Fragment>\n        <div className=\"row row-content\">\n\n          <div className=\"col-md-10\">\n            <LocalForm onSubmit={values => this.handleSubmit(values)}>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"fullname\" md={2}>Name</Label>\n                <Col md={10}>\n                  <Control.text model=\".fullname\" id=\"fullname\"\n                    name=\"fullname\"\n                    className=\"form-control\"\n                    placeholder=\"Name\"\n                    validators={{\n                      required,\n                      minLength: minLength(2),\n                      maxLength: maxLength(20),\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Name\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: 'Required',\n                      minLength: 'Must be at least 2 characters',\n                      maxLength: 'Must be 20 characters or less',\n                    }}\n                  />\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"email\" md={2}>Email</Label>\n                <Col md={10}>\n                  <Control.text model=\".email\" id=\"email\"\n                    name=\"email\"\n                    className=\"form-control\"\n                    placeholder=\"Email\"\n                    validators={{\n                      required,\n                      validEmail\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Email\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: 'Required',\n                      validEmail: 'Must be a valid email'\n                    }}\n                  />\n\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"phone\" md={2}>Phone</Label>\n                <Col md={10}>\n                  <Control.text model=\".phone\" id=\"phone\" name=\"phone\"\n                    className=\"form-control\"\n                    placeholder=\"Phone\"\n                    validators={{\n                      required,\n                      minLength: minLength(10),\n                      maxLength: maxLength(15),\n                      isNumber\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Phone\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: \"Required\",\n                      minLength: \"Must be at least 10 characters\",\n                      MaxLength: \"Must be at 20 characters or less\",\n                      isNumber: \"Must be a number\"\n                    }}\n                  />\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"location\" md={2}>Location</Label>\n                <Col md={10}>\n                  <Control.select model=\".location\" id=\"location\" name=\"location\"\n                    className=\"form-control\"\n                    placeholder=\"location\"\n                    validators={{\n                      required\n                    }}\n\n                  > <option selected value=\"\">select a location</option>\n                    <option disabled hidden value=\"MadisonWest\">MadisonWest</option>\n                    <option value=\"Location16\">Location 16</option>\n                    <option disabled hidden value=\"Milwaukee\">Milwaukee</option>\n                  </Control.select>\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".location\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: \"Required\"\n                    }}\n                  />\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Col md={{ size: 10, offset: 2 }} />\n                <Button type=\"submit\" color=\"primary\">Submit</Button>\n              </Row>\n\n            </LocalForm>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  postCleaner: (cleanerId, fullname, phone, email, location) => postCleaner(cleanerId, fullname, phone, email, location)\n};\n\nexport default connect(null, mapDispatchToProps)(LocationSixteenModal)","import React, { Component } from 'react';\nimport { Button, Label, Col, Row } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { postCleaner } from '../redux/ActionCreators';\nimport { baseUrl } from '../shared/baseUrl';\n\nimport { connect } from 'react-redux';\n\n//Wiscoinsin locations \n/*\nAppleton,\nEauClaire,\nGreenBay,\nMadisonEast,\nMadisonWest,\nMilwaukee\n*/\n\n//recieves value and makes sure that value recieves true or false\nconst required = val => val && val.length;\n//wrap a function inside of a function (2 arrow functions)\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\n//checks to see if email begins with A-Z and checks for numbers\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n\n\nclass LocationSeventeenModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isNavOpen: false,\n      isModalOpen: false,\n      fullname: '',\n      email: '',\n      phone: '',\n      location: '',\n      touched: {\n        fullname: false,\n        email: false,\n        phone: false\n      }\n    };\n    this.toggleNav = this.toggleNav.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n  }\n\n  toggleNav() {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen\n    });\n  }\n\n\n\n  handleSubmit(values) {\n    //alert(`id: ${this.props.cleanerId} name: ${values.fullname} phone: ${values.phone} email: ${values.email}`);\n    // console.log(baseUrl)\n\n    console.log(this.props.postCleaner);\n    this.props.postCleaner(this.props.cleanerId, values.fullname, values.phone, values.email, values.location);\n    alert(`Welcome to Carriage Town Cleaning and thanks for signing up!`);\n  }\n\n  render() {\n\n\n    console.log('bottom modal props: ', this.props);\n\n    return (\n      <React.Fragment>\n        <div className=\"row row-content\">\n\n          <div className=\"col-md-10\">\n            <LocalForm onSubmit={values => this.handleSubmit(values)}>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"fullname\" md={2}>Name</Label>\n                <Col md={10}>\n                  <Control.text model=\".fullname\" id=\"fullname\"\n                    name=\"fullname\"\n                    className=\"form-control\"\n                    placeholder=\"Name\"\n                    validators={{\n                      required,\n                      minLength: minLength(2),\n                      maxLength: maxLength(20),\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Name\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: 'Required',\n                      minLength: 'Must be at least 2 characters',\n                      maxLength: 'Must be 20 characters or less',\n                    }}\n                  />\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"email\" md={2}>Email</Label>\n                <Col md={10}>\n                  <Control.text model=\".email\" id=\"email\"\n                    name=\"email\"\n                    className=\"form-control\"\n                    placeholder=\"Email\"\n                    validators={{\n                      required,\n                      validEmail\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Email\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: 'Required',\n                      validEmail: 'Must be a valid email'\n                    }}\n                  />\n\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"phone\" md={2}>Phone</Label>\n                <Col md={10}>\n                  <Control.text model=\".phone\" id=\"phone\" name=\"phone\"\n                    className=\"form-control\"\n                    placeholder=\"Phone\"\n                    validators={{\n                      required,\n                      minLength: minLength(10),\n                      maxLength: maxLength(15),\n                      isNumber\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Phone\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: \"Required\",\n                      minLength: \"Must be at least 10 characters\",\n                      MaxLength: \"Must be at 20 characters or less\",\n                      isNumber: \"Must be a number\"\n                    }}\n                  />\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"location\" md={2}>Location</Label>\n                <Col md={10}>\n                  <Control.select model=\".location\" id=\"location\" name=\"location\"\n                    className=\"form-control\"\n                    placeholder=\"location\"\n                    validators={{\n                      required\n                    }}\n\n                  > <option selected value=\"\">select a location</option>\n                    <option disabled hidden value=\"MadisonWest\">MadisonWest</option>\n                    <option value=\"Location17\">Location 17</option>\n                    <option disabled hidden value=\"Milwaukee\">Milwaukee</option>\n                  </Control.select>\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".location\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: \"Required\"\n                    }}\n                  />\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Col md={{ size: 10, offset: 2 }} />\n                <Button type=\"submit\" color=\"primary\">Submit</Button>\n              </Row>\n\n            </LocalForm>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  postCleaner: (cleanerId, fullname, phone, email, location) => postCleaner(cleanerId, fullname, phone, email, location)\n};\n\nexport default connect(null, mapDispatchToProps)(LocationSeventeenModal)","import React, { Component } from 'react';\nimport { Button, Label, Col, Row } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { postCleaner } from '../redux/ActionCreators';\nimport { baseUrl } from '../shared/baseUrl';\n\nimport { connect } from 'react-redux';\n\n//Wiscoinsin locations \n/*\nAppleton,\nEauClaire,\nGreenBay,\nMadisonEast,\nMadisonWest,\nMilwaukee\n*/\n\n//recieves value and makes sure that value recieves true or false\nconst required = val => val && val.length;\n//wrap a function inside of a function (2 arrow functions)\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\n//checks to see if email begins with A-Z and checks for numbers\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n\n\nclass LocationEighteenModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isNavOpen: false,\n      isModalOpen: false,\n      fullname: '',\n      email: '',\n      phone: '',\n      location: '',\n      touched: {\n        fullname: false,\n        email: false,\n        phone: false\n      }\n    };\n    this.toggleNav = this.toggleNav.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n  }\n\n  toggleNav() {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen\n    });\n  }\n\n\n\n  handleSubmit(values) {\n    //alert(`id: ${this.props.cleanerId} name: ${values.fullname} phone: ${values.phone} email: ${values.email}`);\n    // console.log(baseUrl)\n\n    console.log(this.props.postCleaner);\n    this.props.postCleaner(this.props.cleanerId, values.fullname, values.phone, values.email, values.location);\n    alert(`Welcome to Carriage Town Cleaning and thanks for signing up!`);\n  }\n\n  render() {\n\n\n    console.log('bottom modal props: ', this.props);\n\n    return (\n      <React.Fragment>\n        <div className=\"row row-content\">\n\n          <div className=\"col-md-10\">\n            <LocalForm onSubmit={values => this.handleSubmit(values)}>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"fullname\" md={2}>Name</Label>\n                <Col md={10}>\n                  <Control.text model=\".fullname\" id=\"fullname\"\n                    name=\"fullname\"\n                    className=\"form-control\"\n                    placeholder=\"Name\"\n                    validators={{\n                      required,\n                      minLength: minLength(2),\n                      maxLength: maxLength(20),\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Name\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: 'Required',\n                      minLength: 'Must be at least 2 characters',\n                      maxLength: 'Must be 20 characters or less',\n                    }}\n                  />\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"email\" md={2}>Email</Label>\n                <Col md={10}>\n                  <Control.text model=\".email\" id=\"email\"\n                    name=\"email\"\n                    className=\"form-control\"\n                    placeholder=\"Email\"\n                    validators={{\n                      required,\n                      validEmail\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Email\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: 'Required',\n                      validEmail: 'Must be a valid email'\n                    }}\n                  />\n\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"phone\" md={2}>Phone</Label>\n                <Col md={10}>\n                  <Control.text model=\".phone\" id=\"phone\" name=\"phone\"\n                    className=\"form-control\"\n                    placeholder=\"Phone\"\n                    validators={{\n                      required,\n                      minLength: minLength(10),\n                      maxLength: maxLength(15),\n                      isNumber\n                    }}\n\n                  />\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".Phone\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: \"Required\",\n                      minLength: \"Must be at least 10 characters\",\n                      MaxLength: \"Must be at 20 characters or less\",\n                      isNumber: \"Must be a number\"\n                    }}\n                  />\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"location\" md={2}>Location</Label>\n                <Col md={10}>\n                  <Control.select model=\".location\" id=\"location\" name=\"location\"\n                    className=\"form-control\"\n                    placeholder=\"location\"\n                    validators={{\n                      required\n                    }}\n\n                  > <option selected value=\"\">select a location</option>\n                    <option disabled hidden value=\"MadisonWest\">MadisonWest</option>\n                    <option value=\"Location18\">Location 18</option>\n                    <option disabled hidden value=\"Milwaukee\">Milwaukee</option>\n                  </Control.select>\n\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".location\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: \"Required\"\n                    }}\n                  />\n\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Col md={{ size: 10, offset: 2 }} />\n                <Button type=\"submit\" color=\"primary\">Submit</Button>\n              </Row>\n\n            </LocalForm>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  postCleaner: (cleanerId, fullname, phone, email, location) => postCleaner(cleanerId, fullname, phone, email, location)\n};\n\nexport default connect(null, mapDispatchToProps)(LocationEighteenModal)","//THIS ALLOWS ONE TO BE ABLE TO DISPLAY INFO AFTER CLICK ON BUTTON\n\nimport React, { Component } from 'react';\nimport { Navbar, NavbarBrand, Jumbotron, NavbarToggler, Collapse, NavItem, Nav, Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { Route, Switch, Link, NavLink } from 'react-router-dom';\nimport Home from './Home';\nimport TopModal from './TopModal';\nimport LocationThirteenModal from './LocationThirteenModal';\nimport LocationFourteenModal from './LocationFourteenModal';\nimport LocationFifteenModal from './LocationFifteenModal';\nimport LocationSixteenModal from './LocationSixteenModal';\nimport LocationSeventeenModal from \"./LocationSeventeenModal\";\nimport LocationEighteenModal from './LocationEighteenModal';\n\nclass States3 extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isModalOpen: false,\n            isModalOpen2: false,\n            isModalOpen3: false,\n            isModalOpen4: false,\n            isModalOpen5: false,\n            isModalOpen6: false\n        };\n\n        this.toggleModal = this.toggleModal.bind(this);\n        this.toggleModal2 = this.toggleModal2.bind(this);\n        this.toggleModal3 = this.toggleModal3.bind(this);\n        this.toggleModal4 = this.toggleModal4.bind(this);\n        this.toggleModal5 = this.toggleModal5.bind(this);\n        this.toggleModal6 = this.toggleModal6.bind(this);\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    toggleModal2() {\n        this.setState({\n            isModalOpen2: !this.state.isModalOpen2\n        });\n    }\n\n    toggleModal3() {\n        this.setState({\n            isModalOpen3: !this.state.isModalOpen3\n        });\n    }\n\n    toggleModal4() {\n        this.setState({\n            isModalOpen4: !this.state.isModalOpen4\n        });\n    }\n\n    toggleModal5() {\n        this.setState({\n            isModalOpen5: !this.state.isModalOpen5\n        });\n    }\n\n    toggleModal6() {\n        this.setState({\n            isModalOpen6: !this.state.isModalOpen6\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"container\">\n                    <div class=\"row mx-auto mb-5 mt-3\">\n                        <div class=\"col-sm-12 col-lg New2\">\n                            <h1>Our Locations</h1>\n                        </div>\n                    </div>\n\n                    <div class=\"row mb-5 mt-4\">\n                        <div class=\"card col-sm-12 col-md-5 col-offset-md-1\">\n                            <img class=\"card-img-top Background\" alt=\"Card 2\" src=\"images/favicon.png\" />\n                            <div class=\"card-body\">\n                                <h2 class=\"New\">Location 13</h2>\n                                <p class=\"card-text\">Text here that describes the site itself. Add a photo of someone inside of the company who works at Carraige Town Cleaning and Disinfectants</p>\n                            </div>\n                            <Button onClick={this.toggleModal}>\n                                <p className=\"ModalButton\">Interested?</p>\n                            </Button>\n\n                        </div>\n\n                        <div class=\"card col-sm-12 col-md-5 col-offset-md-1\">\n                            <img class=\"card-img-top Background\" alt=\"Card \" src=\"images/favicon.png\" />\n                            <div class=\"card-body\">\n                                <h2 class=\"New\">Location 14</h2>\n                                <p class=\"card-text\">Text here that describes the site itself. Add a photo of someone inside of the company who works at Carraige Town Cleaning and Disinfectants</p>\n                            </div>\n                            <Button onClick={this.toggleModal2}>\n                                <p className=\"ModalButton\">Interested?</p>\n                            </Button>\n\n                        </div>\n                    </div>\n\n                    <div class=\"row mb-5 mt-4\">\n                        <div class=\"card col-sm-12 col-md-5 col-offset-md-1\">\n                            <img class=\"card-img-top Background\" alt=\"Card \" src=\"images/favicon.png\" />\n                            <div class=\"card-body\">\n                                <h2 class=\"New\">Location 15</h2>\n                                <p class=\"card-text\">Text here that describes the site itself. Add a photo of someone inside of the company who works at Carraige Town Cleaning and Disinfectants</p>\n                            </div>\n                            <Button onClick={this.toggleModal3}>\n                                <p className=\"ModalButton\">Interested?</p>\n                            </Button>\n\n                        </div>\n\n                        <div class=\"card col-sm-12 col-md-5 col-offset-md-1\">\n                            <img class=\"card-img-top Background\" alt=\"Card \" src=\"images/favicon.png\" />\n                            <div class=\"card-body\">\n                                <h2 class=\"New\">Location 16</h2>\n                                <p class=\"card-text\">Text here that describes the site itself. Add a photo of someone inside of the company who works at Carraige Town Cleaning and Disinfectants</p>\n                            </div>\n                            <Button onClick={this.toggleModal4}>\n                                <p className=\"ModalButton\">Interested?</p>\n                            </Button>\n\n                        </div>\n                    </div>\n\n                    <div class=\"row mb-5 mt-4\">\n                        <div class=\"card col-sm-12 col-md-5 col-offset-md-1\">\n                            <img class=\"card-img-top Background\" alt=\"Card \" src=\"images/favicon.png\" />\n                            <div class=\"card-body\">\n                                <h2 class=\"New\">Location 17</h2>\n                                <p class=\"card-text\">Text here that describes the site itself. Add a photo of someone inside of the company who works at Carraige Town Cleaning and Disinfectants</p>\n                            </div>\n                            <Button onClick={this.toggleModal5}>\n                                <p className=\"ModalButton\">Interested?</p>\n                            </Button>\n\n                        </div>\n\n                        <div class=\"card col-sm-12 col-md-5 col-offset-md-1\">\n                            <img class=\"card-img-top Background\" alt=\"Card \" src=\"images/favicon.png\" />\n                            <div class=\"card-body\">\n                                <h2 class=\"New\">Location 18</h2>\n                                <p class=\"card-text\">Text here that describes the site itself. Add a photo of someone inside of the company who works at Carraige Town Cleaning and Disinfectants</p>\n                            </div>\n                            <Button onClick={this.toggleModal6}>\n                                <p className=\"ModalButton\">Interested?</p>\n                            </Button>\n\n                        </div>\n                    </div>\n\n\n                </div>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>\n                        <TopModal />\n                    </ModalHeader>\n                    <ModalBody>\n                        <LocationThirteenModal />\n                    </ModalBody>\n\n                </Modal>\n\n                <Modal isOpen={this.state.isModalOpen2} toggle={this.toggleModal2}>\n                    <ModalHeader toggle={this.toggleModal2}>\n                        <TopModal />\n                    </ModalHeader>\n                    <ModalBody>\n                        <LocationFourteenModal />\n                    </ModalBody>\n\n                </Modal>\n\n                <Modal isOpen={this.state.isModalOpen3} toggle={this.toggleModal3}>\n                    <ModalHeader toggle={this.toggleModal3}>\n                        <TopModal />\n                    </ModalHeader>\n                    <ModalBody>\n                        <LocationFifteenModal />\n                    </ModalBody>\n\n                </Modal>\n\n                <Modal isOpen={this.state.isModalOpen4} toggle={this.toggleModal4}>\n                    <ModalHeader toggle={this.toggleModal4}>\n                        <TopModal />\n                    </ModalHeader>\n                    <ModalBody>\n                        <LocationSixteenModal />\n                    </ModalBody>\n\n                </Modal>\n\n                <Modal isOpen={this.state.isModalOpen5} toggle={this.toggleModal5}>\n                    <ModalHeader toggle={this.toggleModal5}>\n                        <TopModal />\n                    </ModalHeader>\n                    <ModalBody>\n                        <LocationSeventeenModal />\n                    </ModalBody>\n\n                </Modal>\n\n                <Modal isOpen={this.state.isModalOpen6} toggle={this.toggleModal6}>\n                    <ModalHeader toggle={this.toggleModal6}>\n                        <TopModal />\n                    </ModalHeader>\n                    <ModalBody>\n                        <LocationEighteenModal />\n                    </ModalBody>\n\n                </Modal>\n\n            </React.Fragment>\n        )\n    }\n}\n\nexport default States3;\n\n","import React, { Component } from 'react';\nimport Home from './Home';\nimport Home2 from './Home2';\nimport NavbarTop from './NavbarTop';\nimport { Switch, Route, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Footer from './Footer';\nimport Locations from './Locations';\nimport { postCleaner } from '../redux/ActionCreators';\nimport States from './States';\nimport States2 from './States2';\nimport States3 from './States3';\n\n\n//set up redux\n//takes state as argument and returns arrays as props\nconst mapStateToProps = state => {\n  return {\n    campsites: state.campsites,\n    comments: state.comments,\n    cleaner: state.cleaner,\n    main: state.main\n  }\n}\n\nconst mapDispatchToProps = {\n  postCleaner: (cleanerId, fullname, phone, email, location) => (postCleaner(cleanerId, fullname, phone, email, location)),\n};\n\n//router\nclass MainComponent extends Component {\n  render() {\n\n    //takes the information and filters out the specific array\n\n\n\n    //mains refers to before redux was identified ie: comments: COMMENTS \n    //\n\n\n\n    //Connects to each thing\n    // : on campsiteId tells what follows forward slash is going to be parameter and takes whatever it is and puts it in main\n\n    //If I make Home at top, it still displays information above at the page.\n    \n    //None of the CSS seems to appear on Home component alone...\n    return (\n      <div>\n\n      <NavbarTop />\n\n      <Route exact path=\"/\" component={Home2} />\n      \n        <Switch>\n          <Route path='/Home' component={Home} />\n          <Route path='/Locations' component={Locations} />\n          <Route path='/States' component={States} />\n          <Route path='/States2' component={States2} />\n          <Route path='/States3' component={States3} />\n        </Switch>\n       \n\n     <Footer />\n\n      </div>\n\n    );\n  }\n}\n\n//set up connect method for mapStateToProps\n//withRouter wraps export in it so it will still work\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MainComponent));\n\n  //Figure out the filter part","export const CAMPSITES = [\n    {\n        id: 0,\n        name: \"React Lake Campground\",\n        elevation: 1233,\n        featured: false,\n        description: \"Nestled in the foothills of the Chrome Mountains, this campground on the shores of the pristine React Lake is a favorite for fly fishers.\"\n    },\n    {\n        id: 1,\n        name:\"Chrome River Campground \",\n        elevation: 877,\n        featured: false,\n        description: \"Spend a few sunny days and starry nights beneath a canopy of old-growth firs at this enchanting spot by the Chrome River.\"\n    },\n    {\n        id: 2,\n        name:\"Breadcrumb Trail Campground\",\n        elevation: 2901,\n        featured: false,\n        description: \"Let NuCamp be your guide to this off-the-beaten-path, hike-in-only campground.\"\n    },\n    {\n        id: 3,\n        name:\"Redux Woods Campground\",\n        elevation: 42,\n        featured: true,\n        description: \"You'll never want to leave this hidden gem, deep within the lush Redux Woods.\"\n    }\n];","import { CAMPSITES } from '../shared/campsites';\n\n//reducer function to handle each part of state\nexport const Campsites = (state = CAMPSITES, action) => {\n    switch(action.type) {\n        default:\n            return state;\n    }\n};","//this is the placeholder for images are going\nexport const MAIN = [\n    {\n        id: 0,\n        text: \"Here is some basic text\",\n        image: \"/imageFolder/image.png\"\n    },\n\n    {\n        id: 1,\n        text: \"This is the 2nd page\",\n        image: \"/imageFolder/image.png\"\n    }\n]","import { MAIN } from '../shared/main';\n\n\n//reducer function to handle each part of state\nexport const Main = (state = MAIN, action) => {\n    switch(action.type) {\n        default:\n            return state;\n    }\n};","export const CLEANERS = [\n    {\n        id: 0,\n        name: \"John Doe\",\n        email: \"jwlyons@gmail.com\",\n        phone: 847764911\n    },\n    {\n        id: 1,\n        name: \"Mary Jane\",\n        email: \"running@123.com\",\n        phone: 123467890\n    }\n];","import { CLEANERS } from '../shared/cleaners';\nimport * as ActionTypes from './ActionTypes';\n\n//Causer reducer to update part of state when add_comment dispatched to store\n\n//reducer function to handle each part of state\nexport const Cleaners = (state = CLEANERS, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_CLEANER:\n            //action.payload is object. You can add more to it, ie: id and date\n            const cleaner = action.payload;\n            //concat method attaches new item to end of array without mutating array\n            return state.concat(cleaner)\n        default:\n            return state;\n    }\n};","import './App.css';\nimport React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Main from './html/MainComponent';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\nimport './App.css';\n\n//in configureStore.js, return store is returned here\nconst store = ConfigureStore();\n\n\n//router\nclass App extends Component {\n  render() {\n\n    //Provider allows redux store to connect all components with children of App\n    return(\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>   \n    );\n  }\n}\n\n\nexport default App;\n\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { Campsites } from './campsites'\nimport { Main } from './main';\nimport { Cleaners } from './cleaners';\n\nimport thunk from 'redux-thunk';\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        //This combines all of the data in redux ie: cleaners.js, main.js, and campsites.js\n        combineReducers({\n            campsitse: Campsites,\n            main: Main,\n            cleaners: Cleaners\n        }),\n        applyMiddleware(thunk)\n    );\n\n    //in App.js ConfigureStore() is where this goes\n    return store;\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}